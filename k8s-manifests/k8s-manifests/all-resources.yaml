apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynakube.dynatrace.com/injected: "true"
      kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:50Z"
      metadata-enrichment.dynatrace.com/injected: "true"
      metadata.dynatrace.com: '{}'
      metadata.dynatrace.com/k8s.workload.kind: deployment
      metadata.dynatrace.com/k8s.workload.name: mysql
      oneagent.dynatrace.com/injected: "true"
    creationTimestamp: "2025-10-15T14:41:34Z"
    generateName: mysql-7bdb84fc47-
    generation: 1
    labels:
      app: mysql
      pod-template-hash: 7bdb84fc47
    name: mysql-7bdb84fc47-mgl99
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-7bdb84fc47
      uid: a8dfee10-5220-44aa-9083-acc2da0cbe01
    resourceVersion: "1130026"
    uid: a3b836b9-7536-4723-a38b-a9495f036827
  spec:
    containers:
    - env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-root-password
            name: mysql-secret
      - name: MYSQL_DATABASE
        valueFrom:
          secretKeyRef:
            key: mysql-database
            name: mysql-secret
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: mysql-user
            name: mysql-secret
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysql-secret
      - name: DT_DEPLOYMENT_METADATA
        value: orchestration_tech=Operator-application_monitoring;script_version=v1.7.1;orchestrator_id=a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: LD_PRELOAD
        value: /opt/dynatrace/oneagent-paas/agent/lib64/liboneagentproc.so
      - name: DT_STORAGE
        value: /var/lib/dynatrace/oneagent
      image: mysql:8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: mysql
      ports:
      - containerPort: 3306
        name: mysql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gqpq7
        readOnly: true
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
        subPath: oneagent/ld.so.preload
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
        subPath: mysql
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - bootstrap
      - --config-directory=/mnt/config
      - --input-directory=/mnt/input
      - --suppress-error
      - --source=/opt/dynatrace/oneagent
      - --target=/mnt/bin
      - --install-path=/opt/dynatrace/oneagent-paas
      - --attribute=k8s.workload.kind=deployment
      - --attribute=k8s.workload.name=mysql
      - --metadata-enrichment
      - --attribute-container={"container_image.repository":"mysql","container_image.tags":"8.0","k8s.container.name":"mysql"}
      - --attribute=dt.entity.kubernetes_cluster=KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
      - --attribute=k8s.pod.name=$(K8S_PODNAME)
      - --attribute=k8s.pod.uid=$(K8S_PODUID)
      - --attribute=k8s.node.name=$(K8S_NODE_NAME)
      - --attribute=k8s.namespace.name=default
      - --attribute=k8s.cluster.uid=a86bbfbf-488e-4563-bb3f-d4d136591808
      - --attribute=k8s.cluster.name=dynatrace-k3-demo
      env:
      - name: K8S_PODNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: K8S_PODUID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: IfNotPresent
      name: dynatrace-operator
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gqpq7
        readOnly: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mysql-storage
      persistentVolumeClaim:
        claimName: mysql-pvc
    - name: kube-api-access-gqpq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - csi:
        driver: csi.oneagent.dynatrace.com
        readOnly: true
        volumeAttributes:
          dynakube: default
          mode: app
          retryTimeout: 10m0s
      name: oneagent-bin
    - name: dynatrace-input
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: dynatrace-bootstrapper-config
            optional: false
        - secret:
            name: dynatrace-bootstrapper-certs
            optional: true
    - emptyDir: {}
      name: dynatrace-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-15T14:41:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-15T14:41:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-15T14:41:34Z"
      message: 'containers with unready status: [mysql]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-15T14:41:34Z"
      message: 'containers with unready status: [mysql]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-15T14:41:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 512Mi
      containerID: containerd://b7c9e0b19fdf194e70d1bde168f6748b06d87449e8d6f477fa10f6532906f53c
      image: docker.io/library/mysql:8.0
      imageID: docker.io/library/mysql@sha256:250030e1f5660193c48b146214f6cc726cd929e71fd3a37bbdcff4c0754dd488
      lastState:
        terminated:
          containerID: containerd://4d7475a2459ead4bb224b759a30d71f1fef7ec361af724d21dd4d921486fe338
          exitCode: 137
          finishedAt: "2025-10-21T16:01:14Z"
          reason: Error
          startedAt: "2025-10-21T15:59:46Z"
      name: mysql
      ready: false
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      restartCount: 2173
      started: true
      state:
        running:
          startedAt: "2025-10-21T16:01:15Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gqpq7
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - allocatedResources:
        cpu: 30m
        memory: 30Mi
      containerID: containerd://e53824f93d4dc5e1f2afc8d0f88733845bb7b6209a7e00e2433764c814c88791
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState: {}
      name: dynatrace-operator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e53824f93d4dc5e1f2afc8d0f88733845bb7b6209a7e00e2433764c814c88791
          exitCode: 0
          finishedAt: "2025-10-15T14:41:35Z"
          reason: Completed
          startedAt: "2025-10-15T14:41:35Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gqpq7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.190
    podIPs:
    - ip: 10.42.0.190
    qosClass: Burstable
    startTime: "2025-10-15T14:41:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-03T16:47:58Z"
    generateName: mysql-99c4bc85f-
    generation: 1
    labels:
      app: mysql
      pod-template-hash: 99c4bc85f
    name: mysql-99c4bc85f-mx646
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-99c4bc85f
      uid: d888aa78-156b-4384-a918-d741cec809b8
    resourceVersion: "842631"
    uid: 9b2379ae-5e85-47b7-b778-d3aaa2f6812c
  spec:
    containers:
    - env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-root-password
            name: mysql-secret
      - name: MYSQL_DATABASE
        valueFrom:
          secretKeyRef:
            key: mysql-database
            name: mysql-secret
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: mysql-user
            name: mysql-secret
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysql-secret
      image: mysql:8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: mysql
      ports:
      - containerPort: 3306
        name: mysql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmqsm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mysql-storage
      persistentVolumeClaim:
        claimName: mysql-pvc
    - name: kube-api-access-bmqsm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-03T16:48:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-03T16:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 512Mi
      containerID: containerd://f3759b16eff048d17490576daf1bd07f9fb84b24366241d5c0b0744075cd0e2e
      image: docker.io/library/mysql:8.0
      imageID: docker.io/library/mysql@sha256:250030e1f5660193c48b146214f6cc726cd929e71fd3a37bbdcff4c0754dd488
      lastState:
        terminated:
          containerID: containerd://44ee30dbd706f2dd90229309cedc697d77a65414c5c90e0de4c552c4bbdfc1f7
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:49Z"
      name: mysql
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmqsm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.178
    podIPs:
    - ip: 10.42.0.178
    qosClass: Burstable
    startTime: "2025-10-03T16:48:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynakube.dynatrace.com/injected: "true"
      kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:57Z"
      metadata-enrichment.dynatrace.com/injected: "true"
      metadata.dynatrace.com: '{}'
      metadata.dynatrace.com/k8s.workload.kind: deployment
      metadata.dynatrace.com/k8s.workload.name: mysql-order-generator
      oneagent.dynatrace.com/injected: "true"
    creationTimestamp: "2025-10-08T15:25:03Z"
    generateName: mysql-order-generator-56b677dd-
    generation: 1
    labels:
      app: mysql-order-generator
      pod-template-hash: 56b677dd
    name: mysql-order-generator-56b677dd-6ncvh
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-order-generator-56b677dd
      uid: 96ec0e5e-4de5-44f8-835c-30a8ba2e43d6
    resourceVersion: "842640"
    uid: 71f175db-22be-4791-b4bf-acbff73fc28d
  spec:
    containers:
    - env:
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: DB_HOST
        value: mysql-service
      - name: DB_USER
        valueFrom:
          secretKeyRef:
            key: DB_USER
            name: mysql-data-generator-secret
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DB_PASSWORD
            name: mysql-data-generator-secret
      - name: DB_NAME
        valueFrom:
          secretKeyRef:
            key: DB_NAME
            name: mysql-data-generator-secret
      - name: DT_DEPLOYMENT_METADATA
        value: orchestration_tech=Operator-application_monitoring;script_version=v1.7.1;orchestrator_id=a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: LD_PRELOAD
        value: /opt/dynatrace/oneagent-paas/agent/lib64/liboneagentproc.so
      - name: DT_STORAGE
        value: /var/lib/dynatrace/oneagent
      image: chrishesshub/data-generator:latest
      imagePullPolicy: Always
      name: order-generator
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sxwn
        readOnly: true
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
        subPath: oneagent/ld.so.preload
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
        subPath: order-generator
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - bootstrap
      - --config-directory=/mnt/config
      - --input-directory=/mnt/input
      - --suppress-error
      - --source=/opt/dynatrace/oneagent
      - --target=/mnt/bin
      - --install-path=/opt/dynatrace/oneagent-paas
      - --attribute=k8s.workload.kind=deployment
      - --attribute=k8s.workload.name=mysql-order-generator
      - --metadata-enrichment
      - --attribute-container={"container_image.registry":"chrishesshub","container_image.repository":"data-generator","container_image.tags":"latest","k8s.container.name":"order-generator"}
      - --attribute=k8s.pod.uid=$(K8S_PODUID)
      - --attribute=k8s.node.name=$(K8S_NODE_NAME)
      - --attribute=k8s.namespace.name=default
      - --attribute=k8s.cluster.uid=a86bbfbf-488e-4563-bb3f-d4d136591808
      - --attribute=k8s.cluster.name=dynatrace-k3-demo
      - --attribute=dt.entity.kubernetes_cluster=KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
      - --attribute=k8s.pod.name=$(K8S_PODNAME)
      env:
      - name: K8S_PODNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: K8S_PODUID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: IfNotPresent
      name: dynatrace-operator
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sxwn
        readOnly: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2sxwn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - csi:
        driver: csi.oneagent.dynatrace.com
        readOnly: true
        volumeAttributes:
          dynakube: default
          mode: app
          retryTimeout: 10m0s
      name: oneagent-bin
    - name: dynatrace-input
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: dynatrace-bootstrapper-config
            optional: false
        - secret:
            name: dynatrace-bootstrapper-certs
            optional: true
    - emptyDir: {}
      name: dynatrace-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T15:25:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T15:25:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 64Mi
      containerID: containerd://95476508f206a8f37a1cf3737687f095037fd214de07f582c01fe515f99d10e9
      image: docker.io/chrishesshub/data-generator:latest
      imageID: docker.io/chrishesshub/data-generator@sha256:d005ecfdb92dff578bd09a57ef4ac209f27e408737ec9adb7713c23fc2d9de09
      lastState:
        terminated:
          containerID: containerd://735d924c6389befda0687aa13943f63c37ce8d50cfaa440958869fb4ee93aebb
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:34:22Z"
      name: order-generator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:35Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sxwn
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - allocatedResources:
        cpu: 30m
        memory: 30Mi
      containerID: containerd://8b3ea0fed25e065d7b67179efd024dae00e01b212f84a997bd8790a725ee7684
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState: {}
      name: dynatrace-operator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      restartCount: 2
      started: false
      state:
        terminated:
          containerID: containerd://8b3ea0fed25e065d7b67179efd024dae00e01b212f84a997bd8790a725ee7684
          exitCode: 0
          finishedAt: "2025-10-14T19:45:34Z"
          reason: Completed
          startedAt: "2025-10-14T19:45:33Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sxwn
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.185
    podIPs:
    - ip: 10.42.0.185
    qosClass: Burstable
    startTime: "2025-10-08T15:25:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynakube.dynatrace.com/injected: "true"
      kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:57Z"
      metadata-enrichment.dynatrace.com/injected: "true"
      metadata.dynatrace.com: '{}'
      metadata.dynatrace.com/k8s.workload.kind: deployment
      metadata.dynatrace.com/k8s.workload.name: mysql-order-generator
      oneagent.dynatrace.com/injected: "true"
    creationTimestamp: "2025-10-08T15:24:57Z"
    generateName: mysql-order-generator-56b677dd-
    generation: 1
    labels:
      app: mysql-order-generator
      pod-template-hash: 56b677dd
    name: mysql-order-generator-56b677dd-d48bc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-order-generator-56b677dd
      uid: 96ec0e5e-4de5-44f8-835c-30a8ba2e43d6
    resourceVersion: "842647"
    uid: acde1e80-aaaf-4a35-95d7-708b0215978f
  spec:
    containers:
    - env:
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: DB_HOST
        value: mysql-service
      - name: DB_USER
        valueFrom:
          secretKeyRef:
            key: DB_USER
            name: mysql-data-generator-secret
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DB_PASSWORD
            name: mysql-data-generator-secret
      - name: DB_NAME
        valueFrom:
          secretKeyRef:
            key: DB_NAME
            name: mysql-data-generator-secret
      - name: DT_DEPLOYMENT_METADATA
        value: orchestration_tech=Operator-application_monitoring;script_version=v1.7.1;orchestrator_id=a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: LD_PRELOAD
        value: /opt/dynatrace/oneagent-paas/agent/lib64/liboneagentproc.so
      - name: DT_STORAGE
        value: /var/lib/dynatrace/oneagent
      image: chrishesshub/data-generator:latest
      imagePullPolicy: Always
      name: order-generator
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tnqzx
        readOnly: true
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
        subPath: oneagent/ld.so.preload
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
        subPath: order-generator
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - bootstrap
      - --config-directory=/mnt/config
      - --input-directory=/mnt/input
      - --suppress-error
      - --source=/opt/dynatrace/oneagent
      - --target=/mnt/bin
      - --install-path=/opt/dynatrace/oneagent-paas
      - --attribute=k8s.workload.kind=deployment
      - --attribute=k8s.workload.name=mysql-order-generator
      - --metadata-enrichment
      - --attribute-container={"container_image.registry":"chrishesshub","container_image.repository":"data-generator","container_image.tags":"latest","k8s.container.name":"order-generator"}
      - --attribute=k8s.node.name=$(K8S_NODE_NAME)
      - --attribute=k8s.namespace.name=default
      - --attribute=k8s.cluster.uid=a86bbfbf-488e-4563-bb3f-d4d136591808
      - --attribute=k8s.cluster.name=dynatrace-k3-demo
      - --attribute=dt.entity.kubernetes_cluster=KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
      - --attribute=k8s.pod.name=$(K8S_PODNAME)
      - --attribute=k8s.pod.uid=$(K8S_PODUID)
      env:
      - name: K8S_PODNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: K8S_PODUID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: IfNotPresent
      name: dynatrace-operator
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tnqzx
        readOnly: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tnqzx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - csi:
        driver: csi.oneagent.dynatrace.com
        readOnly: true
        volumeAttributes:
          dynakube: default
          mode: app
          retryTimeout: 10m0s
      name: oneagent-bin
    - name: dynatrace-input
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: dynatrace-bootstrapper-config
            optional: false
        - secret:
            name: dynatrace-bootstrapper-certs
            optional: true
    - emptyDir: {}
      name: dynatrace-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T15:25:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T15:24:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 64Mi
      containerID: containerd://7dcd5e4c7c5a52251dd7bf7faf8d259a49dd14384ca265531bcbf8962542e14a
      image: docker.io/chrishesshub/data-generator:latest
      imageID: docker.io/chrishesshub/data-generator@sha256:d005ecfdb92dff578bd09a57ef4ac209f27e408737ec9adb7713c23fc2d9de09
      lastState:
        terminated:
          containerID: containerd://d7ee3aeb9435d85c3e23d89ca55054bfe1a74eb3366cb8889ddb02ad4999192e
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:34:21Z"
      name: order-generator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:36Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tnqzx
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - allocatedResources:
        cpu: 30m
        memory: 30Mi
      containerID: containerd://7e9cdc42d2e9f041c9e82db6fa3d83f21a36a6dc01e59e1cd78eca99aad2872e
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState: {}
      name: dynatrace-operator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      restartCount: 2
      started: false
      state:
        terminated:
          containerID: containerd://7e9cdc42d2e9f041c9e82db6fa3d83f21a36a6dc01e59e1cd78eca99aad2872e
          exitCode: 0
          finishedAt: "2025-10-14T19:45:34Z"
          reason: Completed
          startedAt: "2025-10-14T19:45:34Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tnqzx
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.188
    podIPs:
    - ip: 10.42.0.188
    qosClass: Burstable
    startTime: "2025-10-08T15:24:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynakube.dynatrace.com/injected: "true"
      kubectl.kubernetes.io/restartedAt: "2025-10-14T20:25:33Z"
      metadata-enrichment.dynatrace.com/injected: "true"
      metadata.dynatrace.com: '{}'
      metadata.dynatrace.com/k8s.workload.kind: deployment
      metadata.dynatrace.com/k8s.workload.name: mysql-sqlserver-sync
      oneagent.dynatrace.com/injected: "true"
    creationTimestamp: "2025-10-14T20:25:33Z"
    generateName: mysql-sqlserver-sync-5bf9b4dc85-
    generation: 1
    labels:
      app: mysql-sqlserver-sync
      pod-template-hash: 5bf9b4dc85
    name: mysql-sqlserver-sync-5bf9b4dc85-x2zjb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-sqlserver-sync-5bf9b4dc85
      uid: d6f96b9f-8289-4794-9736-8af813284972
    resourceVersion: "843914"
    uid: 2d11cc31-9748-46e0-a20c-51e6316b6c92
  spec:
    containers:
    - env:
      - name: PYTHONUNBUFFERED
        value: "1"
      - name: MYSQL_HOST
        value: mysql-service
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: DB_USER
            name: mysql-data-generator-secret
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: DB_PASSWORD
            name: mysql-data-generator-secret
      - name: MYSQL_DATABASE
        valueFrom:
          secretKeyRef:
            key: DB_NAME
            name: mysql-data-generator-secret
      - name: SQLSERVER_HOST
        valueFrom:
          secretKeyRef:
            key: SQLSERVER_HOST
            name: sqlserver-secret
      - name: SQLSERVER_DATABASE
        valueFrom:
          secretKeyRef:
            key: SQLSERVER_DATABASE
            name: sqlserver-secret
      - name: SQLSERVER_USER
        valueFrom:
          secretKeyRef:
            key: SQLSERVER_USER
            name: sqlserver-secret
      - name: SQLSERVER_PASSWORD
        valueFrom:
          secretKeyRef:
            key: SQLSERVER_PASSWORD
            name: sqlserver-secret
      - name: SQLSERVER_PORT
        valueFrom:
          secretKeyRef:
            key: SQLSERVER_PORT
            name: sqlserver-secret
      - name: DT_DEPLOYMENT_METADATA
        value: orchestration_tech=Operator-application_monitoring;script_version=v1.7.1;orchestrator_id=a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: LD_PRELOAD
        value: /opt/dynatrace/oneagent-paas/agent/lib64/liboneagentproc.so
      - name: DT_STORAGE
        value: /var/lib/dynatrace/oneagent
      image: chrishesshub/mysql-sqlserver-sync:latest
      imagePullPolicy: Always
      name: sync-service
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsnt
        readOnly: true
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
        subPath: oneagent/ld.so.preload
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
        subPath: sync-service
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - bootstrap
      - --config-directory=/mnt/config
      - --input-directory=/mnt/input
      - --suppress-error
      - --source=/opt/dynatrace/oneagent
      - --target=/mnt/bin
      - --install-path=/opt/dynatrace/oneagent-paas
      - --attribute=k8s.workload.kind=deployment
      - --attribute=k8s.workload.name=mysql-sqlserver-sync
      - --metadata-enrichment
      - --attribute-container={"container_image.registry":"chrishesshub","container_image.repository":"mysql-sqlserver-sync","container_image.tags":"latest","k8s.container.name":"sync-service"}
      - --attribute=dt.entity.kubernetes_cluster=KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
      - --attribute=k8s.pod.name=$(K8S_PODNAME)
      - --attribute=k8s.pod.uid=$(K8S_PODUID)
      - --attribute=k8s.node.name=$(K8S_NODE_NAME)
      - --attribute=k8s.namespace.name=default
      - --attribute=k8s.cluster.uid=a86bbfbf-488e-4563-bb3f-d4d136591808
      - --attribute=k8s.cluster.name=dynatrace-k3-demo
      env:
      - name: K8S_PODNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: K8S_PODUID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: IfNotPresent
      name: dynatrace-operator
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsnt
        readOnly: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kbsnt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - csi:
        driver: csi.oneagent.dynatrace.com
        readOnly: true
        volumeAttributes:
          dynakube: default
          mode: app
          retryTimeout: 10m0s
      name: oneagent-bin
    - name: dynatrace-input
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: dynatrace-bootstrapper-config
            optional: false
        - secret:
            name: dynatrace-bootstrapper-certs
            optional: true
    - emptyDir: {}
      name: dynatrace-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T20:25:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T20:25:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T20:25:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T20:25:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T20:25:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 128Mi
      containerID: containerd://e88b8e3104c7d3dfc2338446a91ee60f2cb4f72aecdf408d64e1489dd5ac31d5
      image: docker.io/chrishesshub/mysql-sqlserver-sync:latest
      imageID: docker.io/chrishesshub/mysql-sqlserver-sync@sha256:f2ea2349355e47fb8830ffeadd8dd4868f0079f306cb7e461bf4ba4994e1dd80
      lastState: {}
      name: sync-service
      ready: true
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-14T20:25:36Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsnt
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - allocatedResources:
        cpu: 30m
        memory: 30Mi
      containerID: containerd://97195d0e7edc2e01d988423e0276079119ca4f5cd48be78fd6a2f357ff267016
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState: {}
      name: dynatrace-operator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://97195d0e7edc2e01d988423e0276079119ca4f5cd48be78fd6a2f357ff267016
          exitCode: 0
          finishedAt: "2025-10-14T20:25:35Z"
          reason: Completed
          startedAt: "2025-10-14T20:25:35Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kbsnt
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.189
    podIPs:
    - ip: 10.42.0.189
    qosClass: Burstable
    startTime: "2025-10-14T20:25:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      internal.operator.dynatrace.com/activegate-configuration-hash: "1432012929"
      internal.operator.dynatrace.com/activegate-tenant-token-hash: "3632091728"
    creationTimestamp: "2025-10-08T12:36:23Z"
    generateName: default-activegate-
    generation: 1
    labels:
      app.kubernetes.io/component: activegate
      app.kubernetes.io/created-by: default
      app.kubernetes.io/managed-by: dynatrace-operator
      app.kubernetes.io/name: activegate
      app.kubernetes.io/version: 1.323.29.20251002-173724
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: default-activegate-868b57688
      statefulset.kubernetes.io/pod-name: default-activegate-0
    name: default-activegate-0
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: default-activegate
      uid: 867855a9-5bd1-4e59-8967-2b773371d309
    resourceVersion: "842733"
    uid: fcb5c15b-c78d-434a-8076-c5c8db180759
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - env:
      - name: DT_CAPABILITIES
        value: MSGrouter,kubernetes_monitoring,debugging,log_analytics_collector,generic_ingest,otlp_ingest
      - name: DT_DEPLOYMENT_METADATA
        valueFrom:
          configMapKeyRef:
            key: activegate
            name: default-deployment-metadata
            optional: false
      - name: DT_DNS_ENTRY_POINT
        value: https://10.43.236.205:443/communication,https://default-activegate.dynatrace:443/communication
      - name: DT_HTTP_PORT
        value: "9998"
      - name: DT_ID_SEED_K8S_CLUSTER_ID
        value: a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: DT_ID_SEED_NAMESPACE
        value: dynatrace
      - name: DT_SERVER
        valueFrom:
          configMapKeyRef:
            key: communication-endpoints
            name: default-activegate-connection-info
            optional: false
      - name: DT_TENANT
        valueFrom:
          configMapKeyRef:
            key: tenant-uuid
            name: default-activegate-connection-info
            optional: false
      image: bnh29255.live.dynatrace.com/linux/activegate:1.323.29-raw
      imagePullPolicy: Always
      name: activegate
      ports:
      - containerPort: 9999
        name: https
        protocol: TCP
      - containerPort: 9998
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /rest/health
          port: https
          scheme: HTTPS
        initialDelaySeconds: 90
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/tmp/dynatrace/gateway
        name: ag-tmp-gateway
      - mountPath: /var/lib/dynatrace/secrets/tokens/auth-token
        name: ag-authtoken-secret
        readOnly: true
        subPath: auth-token
      - mountPath: /var/lib/dynatrace/gateway/ssl
        name: ag-lib-gateway-ssl
      - mountPath: /var/lib/dynatrace/secrets/tls
        name: server-certs
        readOnly: true
      - mountPath: /var/lib/dynatrace/secrets/tokens/tenant-token
        name: connection-info-secret
        readOnly: true
        subPath: tenant-token
      - mountPath: /var/lib/dynatrace/gateway/temp
        name: ag-lib-gateway-temp
      - mountPath: /var/lib/dynatrace/gateway/data
        name: ag-lib-gateway-data
      - mountPath: /var/log/dynatrace/gateway
        name: ag-log-gateway
      - mountPath: /var/lib/dynatrace/gateway/config
        name: ag-lib-gateway-config
      - mountPath: /opt/dynatrace/gateway/jre/lib/security/cacerts
        name: truststore-volume
        readOnly: true
        subPath: k8s-local.jks
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29xj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: default-activegate-0
    imagePullSecrets:
    - name: default-pull-secret
    initContainers:
    - args:
      - -c
      - /opt/dynatrace/gateway/k8scrt2jks.sh
      command:
      - /bin/bash
      image: bnh29255.live.dynatrace.com/linux/activegate:1.323.29-raw
      imagePullPolicy: Always
      name: certificate-loader
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/dynatrace/gateway/ssl
        name: truststore-volume
      - mountPath: /var/lib/dynatrace/gateway
        name: cert-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29xj8
        readOnly: true
      workingDir: /var/lib/dynatrace/gateway
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: dynatrace-kubernetes-monitoring
    serviceAccountName: dynatrace-kubernetes-monitoring
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/created-by: default
          app.kubernetes.io/managed-by: dynatrace-operator
          app.kubernetes.io/name: activegate
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/created-by: default
          app.kubernetes.io/managed-by: dynatrace-operator
          app.kubernetes.io/name: activegate
      maxSkew: 1
      nodeTaintsPolicy: Honor
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - name: ag-tmp-gateway
      persistentVolumeClaim:
        claimName: ag-tmp-gateway-default-activegate-0
    - name: ag-authtoken-secret
      secret:
        defaultMode: 420
        secretName: default-activegate-authtoken-secret
    - emptyDir: {}
      name: ag-lib-gateway-ssl
    - name: server-certs
      secret:
        defaultMode: 420
        secretName: default-activegate-tls-secret
    - name: connection-info-secret
      secret:
        defaultMode: 420
        secretName: default-activegate-tenant-secret
    - emptyDir: {}
      name: ag-lib-gateway-temp
    - emptyDir: {}
      name: ag-lib-gateway-data
    - emptyDir: {}
      name: ag-log-gateway
    - emptyDir: {}
      name: ag-lib-gateway-config
    - emptyDir: {}
      name: truststore-volume
    - emptyDir: {}
      name: cert-tmp
    - name: kube-api-access-29xj8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T12:36:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:46:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:46:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T12:36:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 256Mi
      containerID: containerd://4952d878cd5ea732aaa9eb8e462fd15c99358bf689e6d8066f84418e97c8a8da
      image: bnh29255.live.dynatrace.com/linux/activegate:1.323.29-raw
      imageID: bnh29255.live.dynatrace.com/linux/activegate@sha256:48277d7b866f159d0146a304f5e0995df27b5c68b2ba5082b30144215ac69d65
      lastState:
        terminated:
          containerID: containerd://26701059a746f1bc9984ad740969a4f9ed07efe487fcecf0fb0f4d59899d3082
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:59Z"
      name: activegate
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:15Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /var/tmp/dynatrace/gateway
        name: ag-tmp-gateway
      - mountPath: /var/lib/dynatrace/secrets/tokens/auth-token
        name: ag-authtoken-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/dynatrace/gateway/ssl
        name: ag-lib-gateway-ssl
      - mountPath: /var/lib/dynatrace/secrets/tls
        name: server-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/dynatrace/secrets/tokens/tenant-token
        name: connection-info-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/dynatrace/gateway/temp
        name: ag-lib-gateway-temp
      - mountPath: /var/lib/dynatrace/gateway/data
        name: ag-lib-gateway-data
      - mountPath: /var/log/dynatrace/gateway
        name: ag-log-gateway
      - mountPath: /var/lib/dynatrace/gateway/config
        name: ag-lib-gateway-config
      - mountPath: /opt/dynatrace/gateway/jre/lib/security/cacerts
        name: truststore-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29xj8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 256Mi
      containerID: containerd://0faf5ac4a1f2448c8dd1d98fedb10fa49e30ad888080b7b93f3d96338f6c7603
      image: bnh29255.live.dynatrace.com/linux/activegate:1.323.29-raw
      imageID: bnh29255.live.dynatrace.com/linux/activegate@sha256:48277d7b866f159d0146a304f5e0995df27b5c68b2ba5082b30144215ac69d65
      lastState: {}
      name: certificate-loader
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
      restartCount: 2
      started: false
      state:
        terminated:
          containerID: containerd://0faf5ac4a1f2448c8dd1d98fedb10fa49e30ad888080b7b93f3d96338f6c7603
          exitCode: 0
          finishedAt: "2025-10-14T19:45:11Z"
          reason: Completed
          startedAt: "2025-10-14T19:45:08Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /var/lib/dynatrace/gateway/ssl
        name: truststore-volume
      - mountPath: /var/lib/dynatrace/gateway
        name: cert-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29xj8
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.174
    podIPs:
    - ip: 10.42.0.174
    qosClass: Burstable
    startTime: "2025-10-08T12:36:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      internal.operator.dynatrace.com/telemetry-ingest-config-hash: "1259058935"
    creationTimestamp: "2025-10-07T18:13:07Z"
    generateName: default-otel-collector-
    generation: 1
    labels:
      app.kubernetes.io/component: dynatrace-opentelemetry-collector
      app.kubernetes.io/created-by: default
      app.kubernetes.io/managed-by: dynatrace-operator
      app.kubernetes.io/name: dynatrace-opentelemetry-collector
      app.kubernetes.io/version: ""
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: default-otel-collector-55f444c9fb
      statefulset.kubernetes.io/pod-name: default-otel-collector-0
    name: default-otel-collector-0
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: default-otel-collector
      uid: 34ab228e-a50b-40f0-bfaa-731ab68d3bc5
    resourceVersion: "842530"
    uid: 3ccbb7ed-3de0-490b-b598-546ad1b44671
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
              - ppc64le
              - s390x
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - --config=file:///config/telemetry.yaml
      env:
      - name: SHARDS
        value: "1"
      - name: POD_NAME_PREFIX
        value: default-otel-collector
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
      - name: SHARD_ID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
      - name: OTLP_GRPC_PORT
        value: "10001"
      - name: OTLP_HTTP_PORT
        value: "10002"
      - name: K8S_CLUSTER_NAME
        value: default
      - name: K8S_CLUSTER_UID
        value: a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: DT_ENTITY_KUBERNETES_CLUSTER
        value: KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
      - name: DT_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: DT_ENDPOINT
            name: dynatrace-otlp-api-endpoint
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: DT_DATA_INGEST_TOKEN
        valueFrom:
          secretKeyRef:
            key: dataIngestToken
            name: default
      image: public.ecr.aws/dynatrace/dynatrace-otel-collector:latest
      imagePullPolicy: Always
      name: collector
      resources: {}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tls/custom/activegate
        name: agcert
        readOnly: true
      - mountPath: /config
        name: telemetry-collector-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlsm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: default-otel-collector-0
    imagePullSecrets:
    - name: default-pull-secret
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: dynatrace-opentelemetry-collector
    serviceAccountName: dynatrace-opentelemetry-collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/created-by: default
          app.kubernetes.io/managed-by: dynatrace-operator
          app.kubernetes.io/name: dynatrace-opentelemetry-collector
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/created-by: default
          app.kubernetes.io/managed-by: dynatrace-operator
          app.kubernetes.io/name: dynatrace-opentelemetry-collector
      maxSkew: 1
      nodeTaintsPolicy: Honor
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - name: agcert
      secret:
        defaultMode: 420
        items:
        - key: server.crt
          path: cert.pem
        secretName: default-activegate-tls-secret
    - configMap:
        defaultMode: 420
        name: default-telemetry-collector-config
      name: telemetry-collector-config
    - name: kube-api-access-dwlsm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:13:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:13:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7b1b49f8601b3f5847dadcfe1a5d770db29cd3dd6316d583e6845bc9f5dad13b
      image: public.ecr.aws/dynatrace/dynatrace-otel-collector:latest
      imageID: public.ecr.aws/dynatrace/dynatrace-otel-collector@sha256:8a5e078013727082bf4fba6f9ff54a9a2c206e6e9fff0801c066d70f7bcdfcab
      lastState:
        terminated:
          containerID: containerd://86470d1a67c9502ac5cf322a918d0b44e04a8c456e688ddd4aca603c8c0b945f
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:52Z"
      name: collector
      ready: true
      resources: {}
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:15Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 10001
      volumeMounts:
      - mountPath: /tls/custom/activegate
        name: agcert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /config
        name: telemetry-collector-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlsm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.182
    podIPs:
    - ip: 10.42.0.182
    qosClass: BestEffort
    startTime: "2025-10-07T18:13:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      dynatrace.com/inject: "false"
      kubectl.kubernetes.io/default-container: provisioner
    creationTimestamp: "2025-10-07T18:12:00Z"
    generateName: dynatrace-oneagent-csi-driver-
    generation: 1
    labels:
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      controller-revision-hash: 8487cbc865
      helm.sh/chart: dynatrace-operator-1.7.1
      internal.oneagent.dynatrace.com/app: csi-driver
      internal.oneagent.dynatrace.com/component: csi-driver
      pod-template-generation: "1"
    name: dynatrace-oneagent-csi-driver-n67xf
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: dynatrace-oneagent-csi-driver
      uid: 49d995c1-9bef-480c-b2fe-f1b712ecc6b5
    resourceVersion: "842591"
    uid: 10dfab25-83bc-486e-876d-314c3a818e5b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - vm-showcase-01
    containers:
    - args:
      - csi-server
      - --endpoint=unix:/csi/csi.sock
      - --node-id=$(KUBE_NODE_NAME)
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 9808
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: server
      ports:
      - containerPort: 8080
        name: server-metrics
        protocol: TCP
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: true
        privileged: true
        readOnlyRootFilesystem: true
        runAsNonRoot: false
        runAsUser: 0
        seLinuxOptions:
          level: s0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /data
        mountPropagation: Bidirectional
        name: data-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
    - args:
      - csi-provisioner
      - --health-probe-bind-address=:10090
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CSI_DATA_DIR
        value: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/data
      - name: modules.json
        value: |
          {
            "csiDriver": true,
            "activeGate": true,
            "oneAgent": true,
            "extensions": true,
            "logMonitoring": true,
            "edgeConnect": true,
            "supportability": true,
            "kspm": true
          }
      - name: helm.json
        value: |
          {
            "tolerations": [{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Exists"}],
            "annotations": {},
            "labels": {},
            "job": {
              "securityContext": {"allowPrivilegeEscalation":true,"privileged":true,"readOnlyRootFilesystem":true,"runAsNonRoot":false,"runAsUser":0,"seLinuxOptions":{"level":"s0"},"seccompProfile":{"type":"RuntimeDefault"}},
              "resources": {"requests":{"cpu":"300m","memory":"100Mi"}}
            }
          }
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: livez
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: provisioner
      ports:
      - containerPort: 10090
        name: livez
        protocol: TCP
      - containerPort: 8090
        name: prov-metrics
        protocol: TCP
      resources:
        requests:
          cpu: 300m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: true
        privileged: true
        readOnlyRootFilesystem: true
        runAsNonRoot: false
        runAsUser: 0
        seLinuxOptions:
          level: s0
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        exec:
          command:
          - /usr/local/bin/dynatrace-operator
          - startup-probe
        failureThreshold: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        mountPropagation: Bidirectional
        name: data-dir
      - mountPath: /var/lib/kubelet/pods/
        name: mountpoint-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
    - args:
      - csi-node-driver-registrar
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/csi.sock
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      name: registrar
      resources:
        limits:
          cpu: 20m
          memory: 30Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
    - args:
      - livenessprobe
      - --csi-address=/csi/csi.sock
      - --health-port=9808
      - --probe-timeout=9s
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      name: liveness-probe
      resources:
        limits:
          cpu: 20m
          memory: 30Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - csi-init
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      name: csi-init
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: false
        runAsUser: 0
        seLinuxOptions:
          level: s0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: dynatrace-high-priority
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: dynatrace-oneagent-csi-driver
    serviceAccountName: dynatrace-oneagent-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: arm64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: ppc64le
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: s390x
    - effect: NoSchedule
      key: ToBeDeletedByClusterAutoscaler
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/data
        type: DirectoryOrCreate
      name: data-dir
    - hostPath:
        path: /var/lib/kubelet/pods/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - name: kube-api-access-7vgb2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 20m
        memory: 30Mi
      containerID: containerd://081980404405ccf09b9faf30fe97e2b2eeac132d3825da5786711a8294335708
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://385188dd1b169dfad55085b2e3ffaca21dc106de42629d0fb6e8e75b828cce7d
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:34:08Z"
      name: liveness-probe
      ready: true
      resources:
        limits:
          cpu: 20m
          memory: 30Mi
        requests:
          cpu: 20m
          memory: 30Mi
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:25Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 300m
        memory: 100Mi
      containerID: containerd://c5776bd5cf53ea718507cdcc45e5ce1b2dd81b574e061d5a5eeee58bc31f3129
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://78cb32542e299021235a3caadbb4b2c8429ed5a803c6e3db13b0bfd12ece7c03
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:34:00Z"
      name: provisioner
      ready: true
      resources:
        requests:
          cpu: 300m
          memory: 100Mi
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:17Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /data
        name: data-dir
      - mountPath: /var/lib/kubelet/pods/
        name: mountpoint-dir
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 20m
        memory: 30Mi
      containerID: containerd://ca86574c7f330032e68f8e4af373a727929519214d7060f49b269e79193515e7
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://8aab7f9d711fcb4131231862bba3638cbd908a4dfab5f62ee2c4decfe3821d9c
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:34:04Z"
      name: registrar
      ready: true
      resources:
        limits:
          cpu: 20m
          memory: 30Mi
        requests:
          cpu: 20m
          memory: 30Mi
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:22Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://1c4fd1e83bdc167cf0f77d3dd8b4e5a379f9efe0b6c75ea3f1c7883f429844a3
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://114aec0ce5b8bab63e618885ee14bc4e441c4d5dcf9c727f3fa6b871c30dd0e7
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:59Z"
      name: server
      ready: true
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:16Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods/
        name: mountpoint-dir
      - mountPath: /data
        name: data-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://c2d342029e370a0a11d1403ef43f1611de960a2826916b238b40dac3452a5dae
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState: {}
      name: csi-init
      ready: true
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 3
      started: false
      state:
        terminated:
          containerID: containerd://c2d342029e370a0a11d1403ef43f1611de960a2826916b238b40dac3452a5dae
          exitCode: 0
          finishedAt: "2025-10-14T19:45:15Z"
          reason: Completed
          startedAt: "2025-10-14T19:45:13Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /data
        name: data-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vgb2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.180
    podIPs:
    - ip: 10.42.0.180
    qosClass: Burstable
    startTime: "2025-10-07T18:12:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynatrace.com/inject: "false"
    creationTimestamp: "2025-10-07T18:12:00Z"
    generateName: dynatrace-operator-56886df45-
    generation: 1
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
      name: dynatrace-operator
      pod-template-hash: 56886df45
    name: dynatrace-operator-56886df45-nm79j
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dynatrace-operator-56886df45
      uid: 22a49a3b-a798-40bc-95c9-6daf818e7f98
    resourceVersion: "842549"
    uid: 44630dac-423b-47e6-acb0-9b6303990f71
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
              - ppc64le
              - s390x
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - operator
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: DT_HOST_AVAILABILITY_DETECTION
        value: "true"
      - name: modules.json
        value: |
          {
            "csiDriver": true,
            "activeGate": true,
            "oneAgent": true,
            "extensions": true,
            "logMonitoring": true,
            "edgeConnect": true,
            "supportability": true,
            "kspm": true
          }
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: livez
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: operator
      ports:
      - containerPort: 10080
        name: livez
        protocol: TCP
      - containerPort: 8080
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        exec:
          command:
          - /usr/local/bin/dynatrace-operator
          - startup-probe
        failureThreshold: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42hst
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: dynatrace-operator
    serviceAccountName: dynatrace-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: arm64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: ppc64le
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: s390x
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-42hst
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 64Mi
      containerID: containerd://4a13003cb9c8581e0709c70f8dadcdf949d20c2ed6983ec429f03354ac4b4709
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://3b2d1d64b6736e9e2363607390823c0e54fe6b58db4fa3d815a0eace9ec4b755
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:56Z"
      name: operator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:13Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42hst
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.173
    podIPs:
    - ip: 10.42.0.173
    qosClass: Burstable
    startTime: "2025-10-07T18:12:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynatrace.com/inject: "false"
      kubectl.kubernetes.io/default-container: webhook
    creationTimestamp: "2025-10-07T18:12:00Z"
    generateName: dynatrace-webhook-84bc6c99b-
    generation: 1
    labels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
      internal.dynatrace.com/app: webhook
      internal.dynatrace.com/component: webhook
      pod-template-hash: 84bc6c99b
    name: dynatrace-webhook-84bc6c99b-5sk7v
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dynatrace-webhook-84bc6c99b
      uid: a6fb954f-49d6-4931-8049-14070b641fa8
    resourceVersion: "842703"
    uid: b41795d4-2f0b-408d-9293-ea91763b71a3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
              - ppc64le
              - s390x
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - webhook-server
      - --certs-dir=/tmp/k8s-webhook-server/serving-certs/
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: WEBHOOK_PORT
        value: "8443"
      - name: HEALTH_PROBE_BIND_ADDRESS
        value: :10080
      - name: METRICS_BIND_ADDRESS
        value: :8383
      - name: modules.json
        value: |
          {
            "csiDriver": true,
            "activeGate": true,
            "oneAgent": true,
            "extensions": true,
            "logMonitoring": true,
            "edgeConnect": true,
            "supportability": true,
            "kspm": true
          }
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: livez
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: webhook
      ports:
      - containerPort: 8443
        name: server-port
        protocol: TCP
      - containerPort: 10080
        name: livez
        protocol: TCP
      - containerPort: 8383
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: livez
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 128Mi
        requests:
          cpu: 300m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs/
        name: certs-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rl58m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: dynatrace-webhook
    serviceAccountName: dynatrace-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: arm64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: ppc64le
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: s390x
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          internal.dynatrace.com/app: webhook
          internal.dynatrace.com/component: webhook
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          internal.dynatrace.com/app: webhook
          internal.dynatrace.com/component: webhook
      maxSkew: 1
      nodeTaintsPolicy: Honor
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - emptyDir:
        sizeLimit: 10Mi
      name: certs-dir
    - name: kube-api-access-rl58m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:46:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:46:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 300m
        memory: 128Mi
      containerID: containerd://951b374cb94b3b6cc4cce5191ebe57f889257e04bb699ecc717ece120c17337a
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://6d92c9ab35ada1aed6446ce0d16e607d7164f62200f9e932ba99efc1eacb22c4
          exitCode: 1
          finishedAt: "2025-10-14T19:45:21Z"
          reason: Error
          startedAt: "2025-10-14T19:45:21Z"
      name: webhook
      ready: true
      resources:
        limits:
          cpu: 300m
          memory: 128Mi
        requests:
          cpu: 300m
          memory: 128Mi
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:56Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs/
        name: certs-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rl58m
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.171
    podIPs:
    - ip: 10.42.0.171
    qosClass: Guaranteed
    startTime: "2025-10-07T18:12:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynatrace.com/inject: "false"
      kubectl.kubernetes.io/default-container: webhook
    creationTimestamp: "2025-10-07T18:12:00Z"
    generateName: dynatrace-webhook-84bc6c99b-
    generation: 1
    labels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
      internal.dynatrace.com/app: webhook
      internal.dynatrace.com/component: webhook
      pod-template-hash: 84bc6c99b
    name: dynatrace-webhook-84bc6c99b-shvrr
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: dynatrace-webhook-84bc6c99b
      uid: a6fb954f-49d6-4931-8049-14070b641fa8
    resourceVersion: "842668"
    uid: 4a44d494-93a4-4d6a-9014-c26fec1bdc0c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
              - ppc64le
              - s390x
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - webhook-server
      - --certs-dir=/tmp/k8s-webhook-server/serving-certs/
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: WEBHOOK_PORT
        value: "8443"
      - name: HEALTH_PROBE_BIND_ADDRESS
        value: :10080
      - name: METRICS_BIND_ADDRESS
        value: :8383
      - name: modules.json
        value: |
          {
            "csiDriver": true,
            "activeGate": true,
            "oneAgent": true,
            "extensions": true,
            "logMonitoring": true,
            "edgeConnect": true,
            "supportability": true,
            "kspm": true
          }
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: livez
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: webhook
      ports:
      - containerPort: 8443
        name: server-port
        protocol: TCP
      - containerPort: 10080
        name: livez
        protocol: TCP
      - containerPort: 8383
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: livez
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 128Mi
        requests:
          cpu: 300m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs/
        name: certs-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t8kj2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: dynatrace-webhook
    serviceAccountName: dynatrace-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: arm64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: ppc64le
    - effect: NoSchedule
      key: kubernetes.io/arch
      value: s390x
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          internal.dynatrace.com/app: webhook
          internal.dynatrace.com/component: webhook
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          internal.dynatrace.com/app: webhook
          internal.dynatrace.com/component: webhook
      maxSkew: 1
      nodeTaintsPolicy: Honor
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    volumes:
    - emptyDir:
        sizeLimit: 10Mi
      name: certs-dir
    - name: kube-api-access-t8kj2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-07T18:12:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 300m
        memory: 128Mi
      containerID: containerd://a344b02676b28238c8fe9c872fce9bc27df87f0bc66df32eaadde80e0ad7ddc6
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState:
        terminated:
          containerID: containerd://21199376e039f69f69baffb8572240c6618f0b2826ab4b493e7a560eb3e4264b
          exitCode: 1
          finishedAt: "2025-10-14T19:45:12Z"
          reason: Error
          startedAt: "2025-10-14T19:45:12Z"
      name: webhook
      ready: true
      resources:
        limits:
          cpu: 300m
          memory: 128Mi
        requests:
          cpu: 300m
          memory: 128Mi
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:30Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs/
        name: certs-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t8kj2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.179
    podIPs:
    - ip: 10.42.0.179
    qosClass: Guaranteed
    startTime: "2025-10-07T18:12:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T19:08:54Z"
    generateName: flask-deployment-64c8955d64-
    generation: 1
    labels:
      app: flask
      pod-template-hash: 64c8955d64
    name: flask-deployment-64c8955d64-bzw2q
    namespace: flask-app
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: flask-deployment-64c8955d64
      uid: 005eeb3a-1405-4b4b-af7e-36aae8e15d48
    resourceVersion: "842504"
    uid: 27d74918-6022-444d-b258-9b5689009357
  spec:
    containers:
    - env:
      - name: APP_ENV
        valueFrom:
          configMapKeyRef:
            key: APP_ENV
            name: flask-config
      - name: DEBUG
        valueFrom:
          configMapKeyRef:
            key: DEBUG
            name: flask-config
      - name: MYSQL_DB
        valueFrom:
          configMapKeyRef:
            key: MYSQL_DB
            name: flask-config
      - name: MYSQL_HOST
        valueFrom:
          configMapKeyRef:
            key: MYSQL_HOST
            name: flask-config
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: db-credentials
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: db-credentials
      image: becloudready/my-flask-app:latest
      imagePullPolicy: Always
      name: flask
      ports:
      - containerPort: 5000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xfbvm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xfbvm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0bc020cf8243ee79d6bbaafbb79539cb9c6edc7aacef5acb52385fa375e17c3a
      image: docker.io/becloudready/my-flask-app:latest
      imageID: docker.io/becloudready/my-flask-app@sha256:6bdd8a37affb8676b57544a2fde06f85b93ab0027ff1a9a19b74db1c1b356891
      lastState:
        terminated:
          containerID: containerd://8f16c4a4cc59094a3dbd7babe3b832605334418f69c9dbb3bc894640f1079ee8
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:55Z"
      name: flask
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xfbvm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.172
    podIPs:
    - ip: 10.42.0.172
    qosClass: BestEffort
    startTime: "2025-09-23T19:08:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T19:08:54Z"
    generateName: flask-deployment-64c8955d64-
    generation: 1
    labels:
      app: flask
      pod-template-hash: 64c8955d64
    name: flask-deployment-64c8955d64-wtdnp
    namespace: flask-app
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: flask-deployment-64c8955d64
      uid: 005eeb3a-1405-4b4b-af7e-36aae8e15d48
    resourceVersion: "842474"
    uid: 2baf7a6b-b5b7-4584-b0e8-30f152a7a561
  spec:
    containers:
    - env:
      - name: APP_ENV
        valueFrom:
          configMapKeyRef:
            key: APP_ENV
            name: flask-config
      - name: DEBUG
        valueFrom:
          configMapKeyRef:
            key: DEBUG
            name: flask-config
      - name: MYSQL_DB
        valueFrom:
          configMapKeyRef:
            key: MYSQL_DB
            name: flask-config
      - name: MYSQL_HOST
        valueFrom:
          configMapKeyRef:
            key: MYSQL_HOST
            name: flask-config
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: username
            name: db-credentials
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: db-credentials
      image: becloudready/my-flask-app:latest
      imagePullPolicy: Always
      name: flask
      ports:
      - containerPort: 5000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5mtr9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5mtr9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6915f945cfe08a0fe6428d295c005be201da59c01438164635dd2344d89719f4
      image: docker.io/becloudready/my-flask-app:latest
      imageID: docker.io/becloudready/my-flask-app@sha256:6bdd8a37affb8676b57544a2fde06f85b93ab0027ff1a9a19b74db1c1b356891
      lastState:
        terminated:
          containerID: containerd://7d5619adc8ea5455db3f39b8cc98d4e2d655226053bfbec7c2a4a44f9ba9e64b
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:55Z"
      name: flask
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:09Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5mtr9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.175
    podIPs:
    - ip: 10.42.0.175
    qosClass: BestEffort
    startTime: "2025-09-23T19:08:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T12:08:32Z"
    generateName: coredns-64fd4b4794-
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 64fd4b4794
    name: coredns-64fd4b4794-lb7hs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-64fd4b4794
      uid: 1bd9650f-4aed-4e7e-a184-fee9dec8697b
    resourceVersion: "842438"
    uid: 537891ff-2079-4cc9-9b47-d70a4bb3ad15
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: rancher/mirrored-coredns-coredns:1.12.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2q9x9
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: vm-showcase-01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        - key: NodeHosts
          path: NodeHosts
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - name: kube-api-access-2q9x9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://dabe6adb758f0e68a3c462827129dba5c9bb2ed66fff365d3bc25895dd1fd68e
      image: docker.io/rancher/mirrored-coredns-coredns:1.12.3
      imageID: docker.io/rancher/mirrored-coredns-coredns@sha256:1391544c978029fcddc65068f6ad67f396e55585b664ecccd7fefba029b9b706
      lastState:
        terminated:
          containerID: containerd://dbd79ee2e6769115bd19426d133dec4645310551b07436cc41b126ceaabb8ca8
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:48Z"
      name: coredns
      ready: true
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:04Z"
      user:
        linux:
          gid: 65532
          supplementalGroups:
          - 65532
          uid: 65532
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2q9x9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.184
    podIPs:
    - ip: 10.42.0.184
    qosClass: Burstable
    startTime: "2025-09-23T12:08:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
    creationTimestamp: "2025-09-23T12:08:31Z"
    generateName: helm-install-traefik-crd-
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
      batch.kubernetes.io/job-name: helm-install-traefik-crd
      controller-uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
      helmcharts.helm.cattle.io/chart: traefik-crd
      job-name: helm-install-traefik-crd
    name: helm-install-traefik-crd-lx7rh
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-traefik-crd
      uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
    resourceVersion: "435168"
    uid: 5ff88e0d-1ea7-4d5a-9b27-0e691526e55e
  spec:
    containers:
    - args:
      - install
      env:
      - name: NAME
        value: traefik-crd
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
        value: https://%{KUBERNETES_API}%/static/charts/traefik-crd-34.2.1+up34.2.0.tgz
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: AUTH_PASS_CREDENTIALS
        value: "false"
      - name: INSECURE_SKIP_TLS_VERIFY
        value: "false"
      - name: PLAIN_HTTP
        value: "false"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
      - name: FAILURE_POLICY
        value: reinstall
      image: rancher/klipper-helm:v0.9.8-build20250709
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /home/klipper-helm/.helm
        name: klipper-helm
      - mountPath: /home/klipper-helm/.cache
        name: klipper-cache
      - mountPath: /home/klipper-helm/.config
        name: klipper-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkj5f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: helm-traefik-crd
    serviceAccountName: helm-traefik-crd
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        medium: Memory
      name: klipper-helm
    - emptyDir:
        medium: Memory
      name: klipper-cache
    - emptyDir:
        medium: Memory
      name: klipper-config
    - emptyDir:
        medium: Memory
      name: tmp
    - name: values
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: chart-values-traefik-crd
    - configMap:
        defaultMode: 420
        name: chart-content-traefik-crd
      name: content
    - name: kube-api-access-rkj5f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:53Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:51Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:51Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2325cb03957e6153879128810dfbb375a591e25d65c7a5fe70216f4ede0a0065
      image: docker.io/rancher/klipper-helm:v0.9.8-build20250709
      imageID: docker.io/rancher/klipper-helm@sha256:5e2e5ab00d5f2652bfea2bc5554d07b57a015fe574434b275a2cb11c2d135c04
      lastState: {}
      name: helm
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2325cb03957e6153879128810dfbb375a591e25d65c7a5fe70216f4ede0a0065
          exitCode: 0
          finishedAt: "2025-09-23T12:08:51Z"
          message: |
            Installing helm chart
          reason: Completed
          startedAt: "2025-09-23T12:08:45Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /home/klipper-helm/.helm
        name: klipper-helm
      - mountPath: /home/klipper-helm/.cache
        name: klipper-cache
      - mountPath: /home/klipper-helm/.config
        name: klipper-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkj5f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2025-09-23T12:08:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helmcharts.helm.cattle.io/configHash: SHA256=8717A52E651717B5B0EF9C9B8646C5FC01C1DA0F7D3F6FEBA321FC57FE9A012A
    creationTimestamp: "2025-09-23T12:08:31Z"
    generateName: helm-install-traefik-
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
      batch.kubernetes.io/job-name: helm-install-traefik
      controller-uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
      helmcharts.helm.cattle.io/chart: traefik
      job-name: helm-install-traefik
    name: helm-install-traefik-kvgwh
    namespace: kube-system
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: helm-install-traefik
      uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
    resourceVersion: "435134"
    uid: f36c934a-aa25-4033-86f2-2f43bb383f21
  spec:
    containers:
    - args:
      - install
      - --set-string
      - global.systemDefaultRegistry=
      env:
      - name: NAME
        value: traefik
      - name: VERSION
      - name: REPO
      - name: HELM_DRIVER
        value: secret
      - name: CHART_NAMESPACE
        value: kube-system
      - name: CHART
        value: https://%{KUBERNETES_API}%/static/charts/traefik-34.2.1+up34.2.0.tgz
      - name: HELM_VERSION
      - name: TARGET_NAMESPACE
        value: kube-system
      - name: AUTH_PASS_CREDENTIALS
        value: "false"
      - name: INSECURE_SKIP_TLS_VERIFY
        value: "false"
      - name: PLAIN_HTTP
        value: "false"
      - name: NO_PROXY
        value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
      - name: FAILURE_POLICY
        value: reinstall
      image: rancher/klipper-helm:v0.9.8-build20250709
      imagePullPolicy: IfNotPresent
      name: helm
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /home/klipper-helm/.helm
        name: klipper-helm
      - mountPath: /home/klipper-helm/.cache
        name: klipper-cache
      - mountPath: /home/klipper-helm/.config
        name: klipper-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ttclt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: helm-traefik
    serviceAccountName: helm-traefik
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir:
        medium: Memory
      name: klipper-helm
    - emptyDir:
        medium: Memory
      name: klipper-cache
    - emptyDir:
        medium: Memory
      name: klipper-config
    - emptyDir:
        medium: Memory
      name: tmp
    - name: values
      projected:
        defaultMode: 420
        sources:
        - secret:
            items:
            - key: HelmChartValuesContent
              path: values-0-000-HelmChart-ValuesContent.yaml
            name: chart-values-traefik
    - configMap:
        defaultMode: 420
        name: chart-content-traefik
      name: content
    - name: kube-api-access-ttclt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:55Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:53Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:53Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3d760ea60ae3165ec7888da6dc401b4b5583121e37991d0e7f1178cfb36226b8
      image: docker.io/rancher/klipper-helm:v0.9.8-build20250709
      imageID: docker.io/rancher/klipper-helm@sha256:5e2e5ab00d5f2652bfea2bc5554d07b57a015fe574434b275a2cb11c2d135c04
      lastState: {}
      name: helm
      ready: false
      resources: {}
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://3d760ea60ae3165ec7888da6dc401b4b5583121e37991d0e7f1178cfb36226b8
          exitCode: 0
          finishedAt: "2025-09-23T12:08:53Z"
          message: |
            Installing helm chart
          reason: Completed
          startedAt: "2025-09-23T12:08:52Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /home/klipper-helm/.helm
        name: klipper-helm
      - mountPath: /home/klipper-helm/.cache
        name: klipper-cache
      - mountPath: /home/klipper-helm/.config
        name: klipper-config
      - mountPath: /tmp
        name: tmp
      - mountPath: /config
        name: values
      - mountPath: /chart
        name: content
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ttclt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Succeeded
    qosClass: BestEffort
    startTime: "2025-09-23T12:08:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T12:08:32Z"
    generateName: local-path-provisioner-774c6665dc-
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 774c6665dc
    name: local-path-provisioner-774c6665dc-sztmr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-774c6665dc
      uid: 5a8c4e38-32e6-43b7-8215-e9ba9fe62c71
    resourceVersion: "842408"
    uid: fff97465-b461-469e-81f2-bc1ae604baf6
  spec:
    containers:
    - command:
      - local-path-provisioner
      - start
      - --config
      - /etc/config/config.json
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/local-path-provisioner:v0.0.31
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kf74z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: local-path-provisioner-service-account
    serviceAccountName: local-path-provisioner-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-kf74z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://492af21f4e72f124618dc727a8d21cdb899436a4ae45910a44cb19f8bd4af902
      image: docker.io/rancher/local-path-provisioner:v0.0.31
      imageID: docker.io/rancher/local-path-provisioner@sha256:80496fdeb307541007621959aa13aed41d31db9cd2dc4167c19833e0bfa3878c
      lastState:
        terminated:
          containerID: containerd://84d00d1ba8610a60c661c18de00f5943eb4302b67171c70c34f7ebd710c0c455
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:50Z"
      name: local-path-provisioner
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          - 10
          - 11
          - 20
          - 26
          - 27
          uid: 0
      volumeMounts:
      - mountPath: /etc/config/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kf74z
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.170
    podIPs:
    - ip: 10.42.0.170
    qosClass: BestEffort
    startTime: "2025-09-23T12:08:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T12:08:32Z"
    generateName: metrics-server-7bfffcd44-
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7bfffcd44
    name: metrics-server-7bfffcd44-7mzcm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7bfffcd44
      uid: 6620e8e2-7aa1-4e92-9490-1ac9adf46e04
    resourceVersion: "842567"
    uid: 12946198-f0ed-40f0-bb82-2b11ca77e770
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
      image: rancher/mirrored-metrics-server:v0.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qzt5w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-qzt5w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://258c9181df36fa8d34219791d7d01feb235329d23164924b1a42b19f5d4408ab
      image: docker.io/rancher/mirrored-metrics-server:v0.8.0
      imageID: docker.io/rancher/mirrored-metrics-server@sha256:89258156d0e9af60403eafd44da9676fd66f600c7934d468ccc17e42b199aee2
      lastState:
        terminated:
          containerID: containerd://11da801c0b977e99fe290f3d5e441bee082b0e3881cdfe388c6707612c51c200
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:48Z"
      name: metrics-server
      ready: true
      resources:
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 1000
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qzt5w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.181
    podIPs:
    - ip: 10.42.0.181
    qosClass: Burstable
    startTime: "2025-09-23T12:08:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T12:08:53Z"
    generateName: svclb-traefik-8e5fe9e3-
    generation: 1
    labels:
      app: svclb-traefik-8e5fe9e3
      controller-revision-hash: 656555d7cc
      pod-template-generation: "1"
      svccontroller.k3s.cattle.io/svcname: traefik
      svccontroller.k3s.cattle.io/svcnamespace: kube-system
    name: svclb-traefik-8e5fe9e3-tntkt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: svclb-traefik-8e5fe9e3
      uid: f17cb393-7b1d-4042-a3cb-3cce10e93f66
    resourceVersion: "842461"
    uid: 54e6c81b-676d-449c-bc50-38eb1e0b4993
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - vm-showcase-01
    automountServiceAccountToken: false
    containers:
    - env:
      - name: SRC_PORT
        value: "80"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "80"
      - name: DEST_IPS
        value: 10.43.23.27
      image: rancher/klipper-lb:v0.4.13
      imagePullPolicy: IfNotPresent
      name: lb-tcp-80
      ports:
      - containerPort: 80
        hostPort: 80
        name: lb-tcp-80
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - env:
      - name: SRC_PORT
        value: "443"
      - name: SRC_RANGES
        value: 0.0.0.0/0
      - name: DEST_PROTO
        value: TCP
      - name: DEST_PORT
        value: "443"
      - name: DEST_IPS
        value: 10.43.23.27
      image: rancher/klipper-lb:v0.4.13
      imagePullPolicy: IfNotPresent
      name: lb-tcp-443
      ports:
      - containerPort: 443
        hostPort: 443
        name: lb-tcp-443
        protocol: TCP
      resources: {}
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      sysctls:
      - name: net.ipv4.ip_forward
        value: "1"
    serviceAccount: svclb
    serviceAccountName: svclb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e34a19d6920542427c768544568bb56a9de43a64d71286b28390636250660693
      image: docker.io/rancher/klipper-lb:v0.4.13
      imageID: docker.io/rancher/klipper-lb@sha256:7eb86d5b908ec6ddd9796253d8cc2f43df99420fc8b8a18452a94dc56f86aca0
      lastState:
        terminated:
          containerID: containerd://bd1e6c60f2cefc224cc6071256d85abf1537b8d9916bb8c0b2dfb3b4b58be58c
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:51Z"
      name: lb-tcp-443
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          - 10
          - 11
          - 20
          - 26
          - 27
          uid: 0
    - containerID: containerd://819c6be9b07f942381ac1bb417de928d9f6ff8fe04097b943d0c57a5eb8d0775
      image: docker.io/rancher/klipper-lb:v0.4.13
      imageID: docker.io/rancher/klipper-lb@sha256:7eb86d5b908ec6ddd9796253d8cc2f43df99420fc8b8a18452a94dc56f86aca0
      lastState:
        terminated:
          containerID: containerd://7998bc4f68c5afc115b96527de78a79fbec40b447372aac681e4cb5517853b7d
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:50Z"
      name: lb-tcp-80
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:07Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 6
          - 10
          - 11
          - 20
          - 26
          - 27
          uid: 0
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.183
    podIPs:
    - ip: 10.42.0.183
    qosClass: BestEffort
    startTime: "2025-09-23T12:08:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9100"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T12:08:52Z"
    generateName: traefik-c98fdf6fb-
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-34.2.1_up34.2.0
      pod-template-hash: c98fdf6fb
    name: traefik-c98fdf6fb-dr6pl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-c98fdf6fb
      uid: 6a18f661-5853-4602-a700-4463fffa4cc5
    resourceVersion: "842466"
    uid: 232b4da4-5d91-4f28-82db-5a7d54dc6927
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --global.checknewversion
      - --global.sendanonymoususage
      - --entryPoints.metrics.address=:9100/tcp
      - --entryPoints.traefik.address=:8080/tcp
      - --entryPoints.web.address=:8000/tcp
      - --entryPoints.websecure.address=:8443/tcp
      - --api.dashboard=true
      - --ping=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      - --providers.kubernetescrd
      - --providers.kubernetescrd.allowEmptyServices=true
      - --providers.kubernetesingress
      - --providers.kubernetesingress.allowEmptyServices=true
      - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
      - --entryPoints.websecure.http.tls=true
      - --log.level=INFO
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: rancher/mirrored-library-traefik:3.3.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 9100
        name: metrics
        protocol: TCP
      - containerPort: 8080
        name: traefik
        protocol: TCP
      - containerPort: 8000
        name: web
        protocol: TCP
      - containerPort: 8443
        name: websecure
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqfd8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-sqfd8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T12:08:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ce3cd18a5b816682e5c82e7f4c977dbaa1986a09d6c7f64bb91fb4524025cb86
      image: docker.io/rancher/mirrored-library-traefik:3.3.6
      imageID: docker.io/rancher/mirrored-library-traefik@sha256:9595fc80fa8ed6c5f3876416332ca7c88e8f255daaf265cff6b857b8d0f44503
      lastState:
        terminated:
          containerID: containerd://961ace7b0cf245206e1ac810bca57c17b3aa3d79b6105797531f150681f58389
          exitCode: 255
          finishedAt: "2025-10-14T19:44:46Z"
          reason: Unknown
          startedAt: "2025-10-08T17:33:49Z"
      name: traefik
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:06Z"
      user:
        linux:
          gid: 65532
          supplementalGroups:
          - 65532
          uid: 65532
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sqfd8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    phase: Running
    podIP: 10.42.0.176
    podIPs:
    - ip: 10.42.0.176
    qosClass: BestEffort
    startTime: "2025-09-23T12:08:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      dynakube.dynatrace.com/injected: "true"
      kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:42Z"
      metadata-enrichment.dynatrace.com/injected: "true"
      metadata.dynatrace.com: '{}'
      metadata.dynatrace.com/k8s.workload.kind: statefulset
      metadata.dynatrace.com/k8s.workload.name: mysql-statefulset
      oneagent.dynatrace.com/injected: "true"
    creationTimestamp: "2025-10-08T15:24:46Z"
    generateName: mysql-statefulset-
    generation: 1
    labels:
      app: mysql
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: mysql-statefulset-6df98776fd
      statefulset.kubernetes.io/pod-name: mysql-statefulset-0
    name: mysql-statefulset-0
    namespace: mysql
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: mysql-statefulset
      uid: ab8276da-9869-462f-a2e3-e09ff0a838cf
    resourceVersion: "842688"
    uid: d81e1900-8322-49aa-85b0-7b8e03978ada
  spec:
    containers:
    - env:
      - name: MYSQL_ROOT_PASSWORD
        value: rootpassword
      - name: MYSQL_DATABASE
        value: flaskdb
      - name: MYSQL_USER
        value: flaskuser
      - name: MYSQL_PASSWORD
        value: flaskpass
      - name: DT_DEPLOYMENT_METADATA
        value: orchestration_tech=Operator-application_monitoring;script_version=v1.7.1;orchestrator_id=a86bbfbf-488e-4563-bb3f-d4d136591808
      - name: LD_PRELOAD
        value: /opt/dynatrace/oneagent-paas/agent/lib64/liboneagentproc.so
      - name: DT_STORAGE
        value: /var/lib/dynatrace/oneagent
      image: mysql:5.7
      imagePullPolicy: IfNotPresent
      name: mysql
      ports:
      - containerPort: 3306
        name: mysql
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-persistent-storage
      - mountPath: /docker-entrypoint-initdb.d
        name: initdb
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhgtq
        readOnly: true
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
        subPath: oneagent/ld.so.preload
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
        subPath: mysql
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: mysql-statefulset-0
    initContainers:
    - command:
      - sh
      - -c
      - rm -rf /var/lib/mysql/*
      image: busybox
      imagePullPolicy: Always
      name: init-clear-mysql-data
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-persistent-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhgtq
        readOnly: true
    - args:
      - bootstrap
      - --config-directory=/mnt/config
      - --input-directory=/mnt/input
      - --suppress-error
      - --source=/opt/dynatrace/oneagent
      - --target=/mnt/bin
      - --install-path=/opt/dynatrace/oneagent-paas
      - --attribute=k8s.workload.name=mysql-statefulset
      - --attribute=k8s.workload.kind=statefulset
      - --metadata-enrichment
      - --attribute-container={"container_image.repository":"mysql","container_image.tags":"5.7","k8s.container.name":"mysql"}
      - --attribute=k8s.pod.uid=$(K8S_PODUID)
      - --attribute=k8s.node.name=$(K8S_NODE_NAME)
      - --attribute=k8s.namespace.name=mysql
      - --attribute=k8s.cluster.uid=a86bbfbf-488e-4563-bb3f-d4d136591808
      - --attribute=k8s.cluster.name=dynatrace-k3-demo
      - --attribute=dt.entity.kubernetes_cluster=KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
      - --attribute=k8s.pod.name=$(K8S_PODNAME)
      env:
      - name: K8S_PODNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: K8S_PODUID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imagePullPolicy: IfNotPresent
      name: dynatrace-operator
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhgtq
        readOnly: true
    nodeName: vm-showcase-01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: mysql-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mysql-persistent-storage
      persistentVolumeClaim:
        claimName: mysql-persistent-storage-mysql-statefulset-0
    - configMap:
        defaultMode: 420
        name: mysql-initdb
      name: initdb
    - name: kube-api-access-fhgtq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - csi:
        driver: csi.oneagent.dynatrace.com
        readOnly: true
        volumeAttributes:
          dynakube: default
          mode: app
          retryTimeout: 10m0s
      name: oneagent-bin
    - name: dynatrace-input
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: dynatrace-bootstrapper-config
            optional: false
        - secret:
            name: dynatrace-bootstrapper-certs
            optional: true
    - emptyDir: {}
      name: dynatrace-config
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T15:24:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-14T19:45:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T15:24:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7e79f710314efee6598259bc2164ada51e648ba168538fe2d4e9f39ed49747d2
      image: docker.io/library/mysql:5.7
      imageID: docker.io/library/mysql@sha256:4bc6bc963e6d8443453676cae56536f4b8156d78bae03c0145cbe47c2aad73bb
      lastState:
        terminated:
          containerID: containerd://0f4d61f68d47f674249179d3e2d1e4628aa3659ae41eef058859188c52bf9da2
          exitCode: 1
          finishedAt: "2025-10-14T19:45:46Z"
          reason: Error
          startedAt: "2025-10-14T19:45:36Z"
      name: mysql
      ready: true
      resources: {}
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-10-14T19:45:58Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-persistent-storage
      - mountPath: /docker-entrypoint-initdb.d
        name: initdb
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhgtq
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /opt/dynatrace/oneagent-paas
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ld.so.preload
        name: dynatrace-config
      - mountPath: /var/lib/dynatrace
        name: dynatrace-config
    hostIP: 10.60.1.4
    hostIPs:
    - ip: 10.60.1.4
    initContainerStatuses:
    - containerID: containerd://72e79e4e9f3aae0080ab337a5b9900d1b9685491a2c72440a466a6db38a590fa
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:d82f458899c9696cb26a7c02d5568f81c8c8223f8661bb2a7988b269c8b9051e
      lastState: {}
      name: init-clear-mysql-data
      ready: true
      resources: {}
      restartCount: 2
      started: false
      state:
        terminated:
          containerID: containerd://72e79e4e9f3aae0080ab337a5b9900d1b9685491a2c72440a466a6db38a590fa
          exitCode: 0
          finishedAt: "2025-10-14T19:45:32Z"
          reason: Completed
          startedAt: "2025-10-14T19:45:32Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 10
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-persistent-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhgtq
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 30m
        memory: 30Mi
      containerID: containerd://0b505ed4f9e0153384bf6ccc7192b3499ec970ba608fcb2e6f124659664e8fc4
      image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
      imageID: public.ecr.aws/dynatrace/dynatrace-operator@sha256:dfe8db1706e1f709892cf53b02328f05612e6e18a38110c7835bf347ceae2e62
      lastState: {}
      name: dynatrace-operator
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 60Mi
        requests:
          cpu: 30m
          memory: 30Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0b505ed4f9e0153384bf6ccc7192b3499ec970ba608fcb2e6f124659664e8fc4
          exitCode: 0
          finishedAt: "2025-10-14T19:45:35Z"
          reason: Completed
          startedAt: "2025-10-14T19:45:35Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /mnt/bin
        name: oneagent-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /mnt/config
        name: dynatrace-config
      - mountPath: /mnt/input
        name: dynatrace-input
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fhgtq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.186
    podIPs:
    - ip: 10.42.0.186
    qosClass: Burstable
    startTime: "2025-10-08T15:24:46Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-23T12:08:22Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "44"
    uid: 75df0628-2bc4-4acd-81b6-dce9b3820021
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"mysql-service","namespace":"default"},"spec":{"ports":[{"port":3306,"protocol":"TCP","targetPort":3306}],"selector":{"app":"mysql"},"type":"ClusterIP"}}
    creationTimestamp: "2025-09-23T12:22:41Z"
    name: mysql-service
    namespace: default
    resourceVersion: "874633"
    uid: e7aa7d0e-cab8-4fe9-844a-cdba50a7cec0
  spec:
    clusterIP: 10.43.170.115
    clusterIPs:
    - 10.43.170.115
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31453
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: mysql
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-10-07T18:12:54Z"
    labels:
      app.kubernetes.io/component: activegate
      app.kubernetes.io/created-by: default
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: v1.7.1
    name: default-activegate
    namespace: dynatrace
    ownerReferences:
    - apiVersion: dynatrace.com/v1beta5
      blockOwnerDeletion: true
      controller: true
      kind: DynaKube
      name: default
      uid: e6161946-231a-423a-ad05-d99aadd0542a
    resourceVersion: "543817"
    uid: 353d08ec-0ea9-4eb9-ac56-53cbd7064e2b
  spec:
    clusterIP: 10.43.236.205
    clusterIPs:
    - 10.43.236.205
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/created-by: default
      app.kubernetes.io/managed-by: dynatrace-operator
      app.kubernetes.io/name: activegate
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: dynatrace-operator
      meta.helm.sh/release-namespace: dynatrace
    creationTimestamp: "2025-10-07T18:12:00Z"
    labels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
    name: dynatrace-webhook
    namespace: dynatrace
    resourceVersion: "543664"
    uid: 795511b6-3c40-4d8f-8ce3-c0f73635d698
  spec:
    clusterIP: 10.43.231.64
    clusterIPs:
    - 10.43.231.64
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: server-port
    selector:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      internal.operator.dynatrace.com/template-hash: "3223171984"
    creationTimestamp: "2025-10-07T18:13:06Z"
    labels:
      app.kubernetes.io/component: dynatrace-opentelemetry-collector
      app.kubernetes.io/created-by: default
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: v1.7.1
    name: telemetry-ingest
    namespace: dynatrace
    ownerReferences:
    - apiVersion: dynatrace.com/v1beta5
      blockOwnerDeletion: true
      controller: true
      kind: DynaKube
      name: default
      uid: e6161946-231a-423a-ad05-d99aadd0542a
    resourceVersion: "543842"
    uid: e9a1fbab-9b09-444a-b70d-92a25a91e879
  spec:
    clusterIP: 10.43.191.133
    clusterIPs:
    - 10.43.191.133
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: jaeger-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: jaeger-thrift-binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: jaeger-thrift-compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: jaeger-thrift-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: otlp-grpc
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: otlp-http
      port: 4318
      protocol: TCP
      targetPort: 4318
    - name: statsd
      port: 8125
      protocol: UDP
      targetPort: 8125
    - name: zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app.kubernetes.io/created-by: default
      app.kubernetes.io/managed-by: dynatrace-operator
      app.kubernetes.io/name: dynatrace-opentelemetry-collector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"flask-svc","namespace":"flask-app"},"spec":{"ports":[{"port":80,"targetPort":5000}],"selector":{"app":"flask"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-09-23T19:08:55Z"
    name: flask-svc
    namespace: flask-app
    resourceVersion: "579776"
    uid: 1a262c9b-7807-44c7-9376-56ffe1fec84b
  spec:
    clusterIP: 10.43.28.106
    clusterIPs:
    - 10.43.28.106
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31619
      port: 80
      protocol: TCP
      targetPort: 5000
    selector:
      app: flask
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/4ySQYvbMBCF/0p5Z9m142TjFfRQdimUQgmk7aXsQZYnG9W2JKRJSgj+70WJl00b0vZm8958vHmjI5Q33yhE4ywk9iUEOmNbSKwp7I0mCAzEqlWsII9Q1jpWbJyN6dc1P0hzJM6DcblWzD3lxr01iQBxU3c/LYXsed9BoqvihbIvxZtPxrbv3rets/9EWDUQJLQL1Nr4X/bolU4z3a6hLB4i0wABH9xAvKVdTG7vAkPivlxUV1rUQfkE4LAjjAK9aqg/1dHVMVPev8DPidJnsMR0mtb9LjKFLE71Tpg/bdNeDy7Q4+f1X/baqriFRKNpVlez+7ouy+W8UkVV36lmURab2eZuSZvlfDYv9GKZ8k7si4i3ahkFoiedVptyf1xBoizyeZUXeVlAvAoR8vul9CRg/Ac1mP6wcr3Rh/SojH3uac1Kd6lXFzhNHV8indOcy19Up+LZaddD4uvjCqO4dGas/S33l4ff3ANxMPqVne567X8SiNSTZhduHHMcx18BAAD//5X9LCMyAwAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T12:08:29Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "281"
    uid: 1a62d648-ba1d-4b99-9fde-cd1b40a396a8
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/4SQQWsbMRCF/0p5Z9nNep04FfRQWnopBUNKL6WHWe04VleWhGa8xZj970UbFxLaJCchvZn3vqczKPvvXMSnCIuxgcHgYw+LOy6jdwyDAyv1pAR7BsWYlNSnKPWaul/sVFiXxaelI9XAS5/e+uoA86yefkcui/txgMXQyiNlbMybLz727z/0fYqvWkQ6MGxFLN7JQriMXObjgf31bcnkqsVw7HghJ1E+YDII1HGYO1ahRFaWuujCUfRRhIWWY016Onbh+vqE6wWePckeFnTdt527uWrc7abhZtXuqF11q83uev2uu2HabK46t1tTJfxvdTy8P1NKMrtayefPdPDhtE3BuxMstoV3XD4dKdwpuQEGORUV2B/nvzl71SwXAXa9bg1ySZpcCrD49nELA6Vyz7qdJy4L008D4cBOU5l/81YWlPO/4NM0/QkAAP//sKxN444CAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-service
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:29Z"
    labels:
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
      objectset.rio.cattle.io/hash: a5d3bc601c871e123fa32b27f549b6ea770bcf4a
    name: metrics-server
    namespace: kube-system
    resourceVersion: "326"
    uid: 4f70c9c5-b5d4-44c0-8fb9-70c403f9ad8b
  spec:
    clusterIP: 10.43.21.16
    clusterIPs:
    - 10.43.21.16
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: PreferDualStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:52Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-34.2.1_up34.2.0
    name: traefik
    namespace: kube-system
    resourceVersion: "842464"
    uid: 8e5fe9e3-703f-4c71-ab30-a9f18c44574e
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.23.27
    clusterIPs:
    - 10.43.23.27
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: PreferDualStack
    ports:
    - name: web
      nodePort: 31529
      port: 80
      protocol: TCP
      targetPort: web
    - name: websecure
      nodePort: 30620
      port: 443
      protocol: TCP
      targetPort: websecure
    selector:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/name: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 10.60.1.4
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"mysql-svc","namespace":"mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"app":"mysql"}}}
    creationTimestamp: "2025-09-23T19:08:25Z"
    name: mysql-svc
    namespace: mysql
    resourceVersion: "14273"
    uid: 7214916b-9edf-4f6b-ae9c-a69a9ae0c102
  spec:
    clusterIP: 10.43.181.236
    clusterIPs:
    - 10.43.181.236
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: dynatrace-operator
      meta.helm.sh/release-namespace: dynatrace
    creationTimestamp: "2025-10-07T18:12:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
    name: dynatrace-oneagent-csi-driver
    namespace: dynatrace
    resourceVersion: "842592"
    uid: 49d995c1-9bef-480c-b2fe-f1b712ecc6b5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        internal.oneagent.dynatrace.com/app: csi-driver
        internal.oneagent.dynatrace.com/component: csi-driver
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          dynatrace.com/inject: "false"
          kubectl.kubernetes.io/default-container: provisioner
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: csi-driver
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dynatrace-operator
          app.kubernetes.io/version: 1.7.1
          helm.sh/chart: dynatrace-operator-1.7.1
          internal.oneagent.dynatrace.com/app: csi-driver
          internal.oneagent.dynatrace.com/component: csi-driver
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - csi-server
          - --endpoint=unix:/csi/csi.sock
          - --node-id=$(KUBE_NODE_NAME)
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 9808
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: server
          ports:
          - containerPort: 8080
            name: server-metrics
            protocol: TCP
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seLinuxOptions:
              level: s0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /var/lib/kubelet/pods/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /data
            mountPropagation: Bidirectional
            name: data-dir
        - args:
          - csi-provisioner
          - --health-probe-bind-address=:10090
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CSI_DATA_DIR
            value: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/data
          - name: modules.json
            value: |
              {
                "csiDriver": true,
                "activeGate": true,
                "oneAgent": true,
                "extensions": true,
                "logMonitoring": true,
                "edgeConnect": true,
                "supportability": true,
                "kspm": true
              }
          - name: helm.json
            value: |
              {
                "tolerations": [{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Exists"}],
                "annotations": {},
                "labels": {},
                "job": {
                  "securityContext": {"allowPrivilegeEscalation":true,"privileged":true,"readOnlyRootFilesystem":true,"runAsNonRoot":false,"runAsUser":0,"seLinuxOptions":{"level":"s0"},"seccompProfile":{"type":"RuntimeDefault"}},
                  "resources": {"requests":{"cpu":"300m","memory":"100Mi"}}
                }
              }
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: livez
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: provisioner
          ports:
          - containerPort: 10090
            name: livez
            protocol: TCP
          - containerPort: 8090
            name: prov-metrics
            protocol: TCP
          resources:
            requests:
              cpu: 300m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seLinuxOptions:
              level: s0
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            exec:
              command:
              - /usr/local/bin/dynatrace-operator
              - startup-probe
            failureThreshold: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            mountPropagation: Bidirectional
            name: data-dir
          - mountPath: /var/lib/kubelet/pods/
            name: mountpoint-dir
            readOnly: true
        - args:
          - csi-node-driver-registrar
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/csi.sock
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          name: registrar
          resources:
            limits:
              cpu: 20m
              memory: 30Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - livenessprobe
          - --csi-address=/csi/csi.sock
          - --health-port=9808
          - --probe-timeout=9s
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          name: liveness-probe
          resources:
            limits:
              cpu: 20m
              memory: 30Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - csi-init
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          name: csi-init
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seLinuxOptions:
              level: s0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data-dir
        priorityClassName: dynatrace-high-priority
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: dynatrace-oneagent-csi-driver
        serviceAccountName: dynatrace-oneagent-csi-driver
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: arm64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: ppc64le
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: s390x
        - effect: NoSchedule
          key: ToBeDeletedByClusterAutoscaler
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.oneagent.dynatrace.com/data
            type: DirectoryOrCreate
          name: data-dir
        - hostPath:
            path: /var/lib/kubelet/pods/
            type: DirectoryOrCreate
          name: mountpoint-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8RVwW7jNhD9lWLOsmJHTtYR0EOQBEXQrmPY3l4WRjCiRjFriiTIkTZGoH8vSDtZpWsnQYFu4YNBcuZx+N7ozROglX+S89JoyAGt9SftCBLYSF1CDtdItdELYkigJsYSGSF/AtTaMLI02oelKf4iwZ44ddKkApkVpdKcyIABydFz802TGzy0G8jhpB0lv/wudfnrglwrBb2bp7EmyIEdUiU3Hwr3FkXI2TQFDfzWM9XQJSAcxccsZU2esbaQ60apBBQWpN584hr9GnKYZOeVKAQNT0/LsxLprMjOzy/GFY0Iq2xyIS4yrD6VAhLwrRBGszNKkUs3me+haVOSJ0WCjYMcKlSe3knxrfiBiA/EH2FiD+VboYrBHnAwobOKLiiD3fmRVG9JBKa+1/8ENbJY//FCIlp7HLzrEmCqrUKmmNvrtw8I9Cb2z6OwRwQ2bGrTaN439KUQYbU0G9KQR20TCJeg1OQ85F+fgHQb//f1LOZX97O7+RISaFE1YWsyhC55FTC/nP52s+iFDNP4O3kVeX2zWN7P5nfLu17k8mr2Y8xb98WI21n/ttEwHWfpaZaefoJulYCs8SHsO9RiTe5ko6S15AaqyNthOk5HQY4YNGuUmhklxRZyuK2mhmeOPGmGl0YMYgo7mAwhAWsc71h6IW1mHEM+GSawNp6/rw5lO8NGGPX86lUCjrxpnKDQP0E3Eo2TvL0ymumRY9+hxUIqyZJ2TVaWkH+F6c3y/vL68+0UVl0X2HlftvE4+7m6/ePC/0m4UMUbyo3HWV+6uDwI8J+Jtwrg0sRUhd5P9wYYP+dB8OOBcJKlQAUHb/FbL1j5vvyaOJW2HafS3lfGfUNX9mmHbhUL7pvCtOe7kAAbRe55vgZbqCoSDDlMzUKsqWxUGAsbCvzHGp1RlAYjcpqYfHCpGj2TC2PRBqw4UG4epWcf++LfQO4dcWAVajqKvMO42rN2WZZG+zuttocTVsEyG1si04IdMj1sA63BeKV++BIPdqPk8YvGFqXCQhHkozAutjawNn8VGy2YkZsoumicI83Tpi7IPT+0hHyYQEleOioPHem491l6f2B7TlhuIR923d8BAAD//zMGNd8/CQAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Service
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:52Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 836fcbce022d5dae5b36694fe1eaf389c93af7dc
      svccontroller.k3s.cattle.io/nodeselector: "false"
      svccontroller.k3s.cattle.io/svcname: traefik
      svccontroller.k3s.cattle.io/svcnamespace: kube-system
    name: svclb-traefik-8e5fe9e3
    namespace: kube-system
    resourceVersion: "842463"
    uid: f17cb393-7b1d-4042-a3cb-3cce10e93f66
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: svclb-traefik-8e5fe9e3
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: svclb-traefik-8e5fe9e3
          svccontroller.k3s.cattle.io/svcname: traefik
          svccontroller.k3s.cattle.io/svcnamespace: kube-system
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: SRC_PORT
            value: "80"
          - name: SRC_RANGES
            value: 0.0.0.0/0
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "80"
          - name: DEST_IPS
            value: 10.43.23.27
          image: rancher/klipper-lb:v0.4.13
          imagePullPolicy: IfNotPresent
          name: lb-tcp-80
          ports:
          - containerPort: 80
            hostPort: 80
            name: lb-tcp-80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: SRC_PORT
            value: "443"
          - name: SRC_RANGES
            value: 0.0.0.0/0
          - name: DEST_PROTO
            value: TCP
          - name: DEST_PORT
            value: "443"
          - name: DEST_IPS
            value: 10.43.23.27
          image: rancher/klipper-lb:v0.4.13
          imagePullPolicy: IfNotPresent
          name: lb-tcp-443
          ports:
          - containerPort: 443
            hostPort: 443
            name: lb-tcp-443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          sysctls:
          - name: net.ipv4.ip_forward
            value: "1"
        serviceAccount: svclb
        serviceAccountName: svclb
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"mysql"},"name":"mysql","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mysql"}},"template":{"metadata":{"labels":{"app":"mysql"}},"spec":{"containers":[{"env":[{"name":"MYSQL_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"mysql-root-password","name":"mysql-secret"}}},{"name":"MYSQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"mysql-database","name":"mysql-secret"}}},{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"mysql-user","name":"mysql-secret"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"mysql-password","name":"mysql-secret"}}}],"image":"mysql:8.0","livenessProbe":{"exec":{"command":["mysqladmin","ping","-h","localhost"]},"initialDelaySeconds":30,"periodSeconds":10},"name":"mysql","ports":[{"containerPort":3306,"name":"mysql"}],"readinessProbe":{"exec":{"command":["mysqladmin","ping","-h","localhost"]},"initialDelaySeconds":30,"periodSeconds":10},"resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/var/lib/mysql","name":"mysql-storage"}]}],"volumes":[{"name":"mysql-storage","persistentVolumeClaim":{"claimName":"mysql-pvc"}}]}}}}
    creationTimestamp: "2025-10-03T16:47:58Z"
    generation: 2
    labels:
      app: mysql
    name: mysql
    namespace: default
    resourceVersion: "876405"
    uid: a0373d8e-ff7a-4e24-9d98-9fd9f9ce98a5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mysql
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:50Z"
        creationTimestamp: null
        labels:
          app: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-root-password
                name: mysql-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: mysql-database
                name: mysql-secret
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: mysql-user
                name: mysql-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-password
                name: mysql-secret
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - -h
              - localhost
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - -h
              - localhost
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-14T19:45:35Z"
      lastUpdateTime: "2025-10-14T19:45:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-10-15T14:51:35Z"
      lastUpdateTime: "2025-10-15T14:51:35Z"
      message: ReplicaSet "mysql-7bdb84fc47" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"mysql-order-generator"},"name":"mysql-order-generator","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mysql-order-generator"}},"template":{"metadata":{"labels":{"app":"mysql-order-generator"}},"spec":{"containers":[{"env":[{"name":"PYTHONUNBUFFERED","value":"1"},{"name":"DB_HOST","value":"mysql-service"},{"name":"DB_USER","valueFrom":{"secretKeyRef":{"key":"DB_USER","name":"mysql-data-generator-secret"}}},{"name":"DB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"DB_PASSWORD","name":"mysql-data-generator-secret"}}},{"name":"DB_NAME","valueFrom":{"secretKeyRef":{"key":"DB_NAME","name":"mysql-data-generator-secret"}}}],"image":"chrishesshub/data-generator:latest","name":"order-generator","resources":{"limits":{"cpu":"100m","memory":"128Mi"},"requests":{"cpu":"50m","memory":"64Mi"}}}]}}}}
    creationTimestamp: "2025-10-03T20:52:49Z"
    generation: 4
    labels:
      app: mysql-order-generator
    name: mysql-order-generator
    namespace: default
    resourceVersion: "842650"
    uid: eba5e8ef-26b7-484d-a197-9bf2ad7b8d90
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mysql-order-generator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:57Z"
        creationTimestamp: null
        labels:
          app: mysql-order-generator
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: DB_HOST
            value: mysql-service
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          image: chrishesshub/data-generator:latest
          imagePullPolicy: Always
          name: order-generator
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-10-03T20:52:49Z"
      lastUpdateTime: "2025-10-08T15:25:08Z"
      message: ReplicaSet "mysql-order-generator-56b677dd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-14T19:45:37Z"
      lastUpdateTime: "2025-10-14T19:45:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"mysql-sqlserver-sync"},"name":"mysql-sqlserver-sync","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mysql-sqlserver-sync"}},"template":{"metadata":{"labels":{"app":"mysql-sqlserver-sync"}},"spec":{"containers":[{"env":[{"name":"PYTHONUNBUFFERED","value":"1"},{"name":"MYSQL_HOST","value":"mysql-service"},{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"DB_USER","name":"mysql-data-generator-secret"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"DB_PASSWORD","name":"mysql-data-generator-secret"}}},{"name":"MYSQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"DB_NAME","name":"mysql-data-generator-secret"}}},{"name":"SQLSERVER_HOST","valueFrom":{"secretKeyRef":{"key":"SQLSERVER_HOST","name":"sqlserver-secret"}}},{"name":"SQLSERVER_DATABASE","valueFrom":{"secretKeyRef":{"key":"SQLSERVER_DATABASE","name":"sqlserver-secret"}}},{"name":"SQLSERVER_USER","valueFrom":{"secretKeyRef":{"key":"SQLSERVER_USER","name":"sqlserver-secret"}}},{"name":"SQLSERVER_PASSWORD","valueFrom":{"secretKeyRef":{"key":"SQLSERVER_PASSWORD","name":"sqlserver-secret"}}},{"name":"SQLSERVER_PORT","valueFrom":{"secretKeyRef":{"key":"SQLSERVER_PORT","name":"sqlserver-secret"}}}],"image":"chrishesshub/mysql-sqlserver-sync:latest","name":"sync-service","resources":{"limits":{"cpu":"200m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}]}}}}
    creationTimestamp: "2025-10-03T21:23:35Z"
    generation: 4
    labels:
      app: mysql-sqlserver-sync
    name: mysql-sqlserver-sync
    namespace: default
    resourceVersion: "843924"
    uid: f8c6f2e4-0b59-4975-a54c-04c92129c849
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mysql-sqlserver-sync
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-14T20:25:33Z"
        creationTimestamp: null
        labels:
          app: mysql-sqlserver-sync
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          - name: SQLSERVER_HOST
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_HOST
                name: sqlserver-secret
          - name: SQLSERVER_DATABASE
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_DATABASE
                name: sqlserver-secret
          - name: SQLSERVER_USER
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_USER
                name: sqlserver-secret
          - name: SQLSERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PASSWORD
                name: sqlserver-secret
          - name: SQLSERVER_PORT
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PORT
                name: sqlserver-secret
          image: chrishesshub/mysql-sqlserver-sync:latest
          imagePullPolicy: Always
          name: sync-service
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-14T19:45:12Z"
      lastUpdateTime: "2025-10-14T19:45:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-10-03T21:23:35Z"
      lastUpdateTime: "2025-10-14T20:25:37Z"
      message: ReplicaSet "mysql-sqlserver-sync-5bf9b4dc85" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: dynatrace-operator
      meta.helm.sh/release-namespace: dynatrace
    creationTimestamp: "2025-10-07T18:12:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      dynatrace.com/install-source: helm
      helm.sh/chart: dynatrace-operator-1.7.1
    name: dynatrace-operator
    namespace: dynatrace
    resourceVersion: "842551"
    uid: dea6bf9d-e38b-421f-95a1-99e2d9defc91
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 1
    selector:
      matchLabels:
        name: dynatrace-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          dynatrace.com/inject: "false"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dynatrace-operator
          app.kubernetes.io/version: 1.7.1
          helm.sh/chart: dynatrace-operator-1.7.1
          name: dynatrace-operator
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - operator
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: DT_HOST_AVAILABILITY_DETECTION
            value: "true"
          - name: modules.json
            value: |
              {
                "csiDriver": true,
                "activeGate": true,
                "oneAgent": true,
                "extensions": true,
                "logMonitoring": true,
                "edgeConnect": true,
                "supportability": true,
                "kspm": true
              }
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10080
            name: livez
            protocol: TCP
          - containerPort: 8080
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            exec:
              command:
              - /usr/local/bin/dynatrace-operator
              - startup-probe
            failureThreshold: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: dynatrace-operator
        serviceAccountName: dynatrace-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: arm64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: ppc64le
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: s390x
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-07T18:12:00Z"
      lastUpdateTime: "2025-10-07T18:12:11Z"
      message: ReplicaSet "dynatrace-operator-56886df45" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-14T19:45:18Z"
      lastUpdateTime: "2025-10-14T19:45:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: dynatrace-operator
      meta.helm.sh/release-namespace: dynatrace
    creationTimestamp: "2025-10-07T18:12:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
    name: dynatrace-webhook
    namespace: dynatrace
    resourceVersion: "842708"
    uid: feef5fe4-3302-4e40-95a7-c701d7f4bb5a
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 1
    selector:
      matchLabels:
        internal.dynatrace.com/app: webhook
        internal.dynatrace.com/component: webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          dynatrace.com/inject: "false"
          kubectl.kubernetes.io/default-container: webhook
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: webhook
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dynatrace-operator
          app.kubernetes.io/version: 1.7.1
          helm.sh/chart: dynatrace-operator-1.7.1
          internal.dynatrace.com/app: webhook
          internal.dynatrace.com/component: webhook
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - webhook-server
          - --certs-dir=/tmp/k8s-webhook-server/serving-certs/
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: WEBHOOK_PORT
            value: "8443"
          - name: HEALTH_PROBE_BIND_ADDRESS
            value: :10080
          - name: METRICS_BIND_ADDRESS
            value: :8383
          - name: modules.json
            value: |
              {
                "csiDriver": true,
                "activeGate": true,
                "oneAgent": true,
                "extensions": true,
                "logMonitoring": true,
                "edgeConnect": true,
                "supportability": true,
                "kspm": true
              }
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: webhook
          ports:
          - containerPort: 8443
            name: server-port
            protocol: TCP
          - containerPort: 10080
            name: livez
            protocol: TCP
          - containerPort: 8383
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 300m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs/
            name: certs-dir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: dynatrace-webhook
        serviceAccountName: dynatrace-webhook
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: arm64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: ppc64le
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: s390x
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              internal.dynatrace.com/app: webhook
              internal.dynatrace.com/component: webhook
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              internal.dynatrace.com/app: webhook
              internal.dynatrace.com/component: webhook
          maxSkew: 1
          nodeTaintsPolicy: Honor
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        volumes:
        - emptyDir:
            sizeLimit: 10Mi
          name: certs-dir
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-10-07T18:12:00Z"
      lastUpdateTime: "2025-10-07T18:12:25Z"
      message: ReplicaSet "dynatrace-webhook-84bc6c99b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-14T19:46:17Z"
      lastUpdateTime: "2025-10-14T19:46:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"flask"},"name":"flask-deployment","namespace":"flask-app"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"flask"}},"template":{"metadata":{"labels":{"app":"flask"}},"spec":{"containers":[{"env":[{"name":"APP_ENV","valueFrom":{"configMapKeyRef":{"key":"APP_ENV","name":"flask-config"}}},{"name":"DEBUG","valueFrom":{"configMapKeyRef":{"key":"DEBUG","name":"flask-config"}}},{"name":"MYSQL_DB","valueFrom":{"configMapKeyRef":{"key":"MYSQL_DB","name":"flask-config"}}},{"name":"MYSQL_HOST","valueFrom":{"configMapKeyRef":{"key":"MYSQL_HOST","name":"flask-config"}}},{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"username","name":"db-credentials"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"db-credentials"}}}],"image":"becloudready/my-flask-app:latest","name":"flask","ports":[{"containerPort":5000}]}]}}}}
    creationTimestamp: "2025-09-23T19:08:54Z"
    generation: 1
    labels:
      app: flask
    name: flask-deployment
    namespace: flask-app
    resourceVersion: "842509"
    uid: 51717e5c-0fd2-4577-bc59-87506c8a5648
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: flask
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: flask
      spec:
        containers:
        - env:
          - name: APP_ENV
            valueFrom:
              configMapKeyRef:
                key: APP_ENV
                name: flask-config
          - name: DEBUG
            valueFrom:
              configMapKeyRef:
                key: DEBUG
                name: flask-config
          - name: MYSQL_DB
            valueFrom:
              configMapKeyRef:
                key: MYSQL_DB
                name: flask-config
          - name: MYSQL_HOST
            valueFrom:
              configMapKeyRef:
                key: MYSQL_HOST
                name: flask-config
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: db-credentials
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: db-credentials
          image: becloudready/my-flask-app:latest
          imagePullPolicy: Always
          name: flask
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-23T19:08:54Z"
      lastUpdateTime: "2025-09-23T19:08:59Z"
      message: ReplicaSet "flask-deployment-64c8955d64" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-14T19:45:13Z"
      lastUpdateTime: "2025-10-14T19:45:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV3W7bOBN9lQ9zLcVW3DaugO+iG2e3RVuvUSe9KYKCpkYW1xSHS46caAO/+2Ik27Hb/LSLXtkiZ4bnnPm7A+XNZwzRkIMclPdxsM4ggZVxBeQwQW+prdExJFAjq0KxgvwOlHPEig25KJ+0+As1R+STYOhEK2aLJ4YGRoJA8ug93TgM6XK9ghxWo3hws86S/703rvj/m6Ig92wIp2qEHDQFLFz8IfPolRafVbPANLaRsYZNAlYt0HakVuOYKu93Jn1c+RscMkaJtn32nAJOpvMnnq1UrCCHhcbT8ej09XicZWcvRmo4Gr9Si5fZsDwtX51hefbi9MVQvzwTIN9RegJ09KgFcsC1kVy+NZEptB9MbRjyYQIRLWqmIEa1Yl19eIrmRkJyUIzLtgtL1hq3vPKFYuxD3F45tVbGqoVFyLNNAtx6QfbpyFbOsfZ253dQQk8KvTkgpcmxMg5DhPzLHaiwlD+QanIlJDBA1oOtSgPJRGkswnUCplZLQRSU0xWGQW1CELN0a7z7zbOT7PRkBFuPWWPtjKzRLeTwrpwSzwLGvgWsWaPDGGeBFh2hUhnbBLysAsaKbAH5KIGK2f+BLPdeseR9UKGyXEECngJDPh6OJSm6wi7Hby8vZyKVcYaNshO0qp2jJldEyF8NE/AYDBX7o0ycG60xxoOXswTY1EgN3xs+VEcCoZdyr+ysQ/VytLfeWgZi0mQhh6uJIHzGJWXtj90uzx90e50dONbIwej4gON1AgFVYf6T5OLZ3iuejbMfVfx7wU9/Qu+AkZqgsSttKx0Y+9KvKUhJZWfDjwY6w78bjP2t9o1cDYd1N2i3pr2ltALqJhhuz8kx3nY0lbV0MwtmbSwu8SJqZbt5DHmpbMQEtPJqYaxh00NRRSFtM724/Prbu+nk6/zi0+d35xfSKUUgL3fKWrje9KL/6Wz7iYh/Nxa3gybn0OAmgTXZpsaP1LhtHdXyd7bV/aAd4aD6XGmWae8J9y/sYj4eY6CbyFQfhOq+02ciXkvxFC7uO3mCpWqsNLGjAucH8/B4pFOEHKxxza3kyAdDnfBWxTjtAfRqpNo2kTGkOhg2WlmQNIW10fhGayEz/bbxmCyG3dL8cgcrFGDnW/9u0cWOQgLkxVLwwcWtkSIRjbAsUTPkMKW5rrBorDDvwwirNJDFk2M+0nmBbOqtcvhLI9dK+D8c8lrYerK0bOdeUnNOTjaK2ZVMN/3nP72VanU7X+FN33zbB953KI+xVRS5q5cEbip0Vy4qNrE0/bqCCU2J90RFgF+OZ/f1jWj/kHsM1A7PG9feqLbTsK/u/bAuzfKj8gLHMNZHRbTbe8lu/u1PhF1vNKUC35LkZ291fyTPfbMqNo+073ag36M59kv3HUteil3Z/eR4qoU315vNZvNvAAAA//8nXRw3kgoAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:29Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: coredns
    namespace: kube-system
    resourceVersion: "842442"
    uid: 3d833084-ce18-445d-824b-c17b0948fd7a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/mirrored-coredns-coredns:1.12.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T12:08:31Z"
      lastUpdateTime: "2025-09-23T12:08:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-23T12:08:31Z"
      lastUpdateTime: "2025-09-23T12:08:44Z"
      message: ReplicaSet "coredns-64fd4b4794" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgIcLUKR7gG1Pd1pW4padV8qtBqcCbg4tmUP2UYo/301BFqqLe2utE+J7ZnP38z3jbeAXn+lELWzkAN6H3v1ABJYa1tADpfkjWsqsgwJVMRYICPkW0BrHSNrZ6Ms3eKJFEfiLGiXKWQ2lGnX0wICyclz991SSJf1GnJYD+PRST1I/vqibfHPpCic/RTCYkWQg3EKTRrZBVzSLyVFj0oy15sFpbGJTBW0CRhckPmwtBXGFeQwGA/L4bkanZflQg37o7NRf1ieDcvB+bhfjNVojH8XuCjOBPQNSY+8Sn1wtZbmU4Du/ASf6EkJm0Bd/H9aimyudaUZ8n4CkQwpdkGCKmS1un6pAL0/fWsr4ByQadnsLnDGaLt88AUydWDPDxZr1AYXhiAftAlw44Xj3ZtY2afKm0PekVvMb3DZF6qcZdSWQoT8UZZVhWLJx9Pti4xBfJqmytlSLyGBHrHqdav9J3uKzsI8AbL1Dnkvyuz28tt0cnN1P5tcXEECNZoN/RtcJWRKTaa4o/Llf4Ys4h9qzF6Va9t2noCuxH85BLRqRaH3Pue87mf9bCjztkuYbYyZOaNVAzn8X04dzwLFbvg+807tzKaiG7ex3HWskt89z+M2vGJ1G2mXCe1ciFtX0P2RlcSGwRJT3I1NFArabp5FbR+0C5qbC4MxTjvMzrGpwKQqaNYKjUhDodaKJkoJq+lHtaT72BS7YEiAnaFweGwet7AmadDFHn73QMRbaxoZeC+Rwh2unnXkCG2yBSpLUgw5TN29WlGxMfI4dDA7qsEZyt7WKgYMzqTeoKU/ilxh5J1m70DOD0oebC8S3aAXLX62wN7n7WlJ27b9EQAA//8eX0Hn5AUAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:29Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 183f35c65ffbc3064603f43f1580d8c68a2dabd4
    name: local-path-provisioner
    namespace: kube-system
    resourceVersion: "842410"
    uid: 436095c6-f6e9-47cc-99e4-d70c20f6256f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        app: local-path-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/local-path-provisioner:v0.0.31
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T12:08:31Z"
      lastUpdateTime: "2025-09-23T12:08:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-23T12:08:31Z"
      lastUpdateTime: "2025-09-23T12:08:42Z"
      message: ReplicaSet "local-path-provisioner-774c6665dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV4W8auRP9V36az7vJLoEkXYkPiPAr1aUpKvROpypCxjuAD6/t88zScBH/+2l2k5RcStOr7gta7PHzm/fGM/eggvkVIxnvoAAVAp1uc0hgY1wJBVxhsH5XoWNIoEJWpWIFxT0o5zwrNt6R/PWLP1AzIZ9E40+0YrZ4YvypERBIju77Lw5jutpuoIDNGR3sbPPkf78YV/YHZendqxBOVQiFUIxGU0oYtxjT8pD+6wAUlBaUTb3AlHbEWME+AasWaJs0N5eUqhBeXPQd9LWiNRSAeYadbg/zM+yeq4tOT78py7LsLt/gonP2Zpl3Ly4uustS7vtmLtCuH6FIAbUQjLg14uXYEPu4uzaVYSiyBAgtavZRgirFen39elJ7AeaoGFe7Btxba9zqUygVYwt098mprTJWLSxCke8T4F0Qfh+fxco6VsE+njsopB8Q96gkB4lr71gZh5Gg+HwPKq7kA9JUY+S0NLF/ylWABNKUUNcR0+Aj9/Os08uaVRHUIqch4hJjxDJVZRmRKJWMqP/OMUan7LtJMrp7+hx74obbIURNmDpfYkqsuKbmpiagpZ9GJG9reTv9vEfNDltKtQlrjCnVhpH6s+vpfDS8Go/kdzqY//ZuNp4PRtN5p3c+fzt8P5+OB2eX3eRr3McfivoHWt65fIzr9M6PoR2NOkAbjgfD8aCTzScfrn/Pz7Let8BeBMFtAqZSK3E3KqfXGE8rE6MXB57bXWyzk8sTccuaLTokmkS/aApqqYytI87WEWntbQnFWQJr5vAWWfaDYnmEp3LwL0igcaRoIkR/0mts6ms8m02mUlbGGTbKXqFVuylq70qC4jxLIGA0vnxayuVp1Voj0cHleQJsKvQ1fw38zrsWNm3ZPlXxpCHYVOfTuUe2IXr22lsoYDacwP42gYiqND+liJzc/bwkLxXp/AtB5CHUUSO1revPGombbx1qKCDPsqoZO5WPOyjgIntv2qYkL9jwbugd412Tj7LWf5lEszUWVzgirWwznaBYKkvYSvTB2d1H7/n/xuJD7yw41rJbuwHdeCe7z9Y+EUYxIsv2CWy9rSt872v34Fcln5MHKdv+8mAWV0G6DuxvxR/pBtODDiydIjpkpGYAERRgjavvROcQjW+Ss4ropkVrybZNRUfDRisrJmHcGo0DrYXHzZHyYm8xPo7qz/ewQRFz+ADTjFcSZWSIBYkUjjC6M2LGPrkHXC5RS3Hc+KleY1lb6XctTEMpeosnz3OSSo7epsEqh/8pcqWI24n7EvL20aM2U6wC766MSL7/ljP7/f7vAAAA//93ZXtQAQkAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:29Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      objectset.rio.cattle.io/hash: e10e245e13e46a725c9dddd4f9eb239f147774fd
    name: metrics-server
    namespace: kube-system
    resourceVersion: "842571"
    uid: 9964afd6-38a6-4a28-9f5c-ca2351cb787f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
          image: rancher/mirrored-metrics-server:v0.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T12:08:31Z"
      lastUpdateTime: "2025-09-23T12:08:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-23T12:08:31Z"
      lastUpdateTime: "2025-09-23T12:09:03Z"
      message: ReplicaSet "metrics-server-7bfffcd44" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:52Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-34.2.1_up34.2.0
    name: traefik
    namespace: kube-system
    resourceVersion: "842470"
    uid: 99300ebb-784f-4c6f-8806-850171576a31
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-kube-system
        app.kubernetes.io/name: traefik
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-kube-system
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-34.2.1_up34.2.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --global.checknewversion
          - --global.sendanonymoususage
          - --entryPoints.metrics.address=:9100/tcp
          - --entryPoints.traefik.address=:8080/tcp
          - --entryPoints.web.address=:8000/tcp
          - --entryPoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetescrd.allowEmptyServices=true
          - --providers.kubernetesingress
          - --providers.kubernetesingress.allowEmptyServices=true
          - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
          - --entryPoints.websecure.http.tls=true
          - --log.level=INFO
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/mirrored-library-traefik:3.3.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 8080
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T12:08:52Z"
      lastUpdateTime: "2025-09-23T12:09:03Z"
      message: ReplicaSet "traefik-c98fdf6fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-14T19:45:09Z"
      lastUpdateTime: "2025-10-14T19:45:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-08T15:24:50Z"
    generation: 1
    labels:
      app: mysql
      pod-template-hash: 7bdb84fc47
    name: mysql-7bdb84fc47
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: a0373d8e-ff7a-4e24-9d98-9fd9f9ce98a5
    resourceVersion: "876049"
    uid: a8dfee10-5220-44aa-9083-acc2da0cbe01
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 7bdb84fc47
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:50Z"
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 7bdb84fc47
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-root-password
                name: mysql-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: mysql-database
                name: mysql-secret
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: mysql-user
                name: mysql-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-password
                name: mysql-secret
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - -h
              - localhost
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - -h
              - localhost
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-10-03T16:47:58Z"
    generation: 1
    labels:
      app: mysql
      pod-template-hash: 99c4bc85f
    name: mysql-99c4bc85f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql
      uid: a0373d8e-ff7a-4e24-9d98-9fd9f9ce98a5
    resourceVersion: "842634"
    uid: d888aa78-156b-4384-a918-d741cec809b8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mysql
        pod-template-hash: 99c4bc85f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mysql
          pod-template-hash: 99c4bc85f
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-root-password
                name: mysql-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: mysql-database
                name: mysql-secret
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: mysql-user
                name: mysql-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-password
                name: mysql-secret
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - -h
              - localhost
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - mysqladmin
              - ping
              - -h
              - localhost
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-08T15:24:57Z"
    generation: 2
    labels:
      app: mysql-order-generator
      pod-template-hash: 56b677dd
    name: mysql-order-generator-56b677dd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql-order-generator
      uid: eba5e8ef-26b7-484d-a197-9bf2ad7b8d90
    resourceVersion: "842648"
    uid: 96ec0e5e-4de5-44f8-835c-30a8ba2e43d6
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: mysql-order-generator
        pod-template-hash: 56b677dd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:57Z"
        creationTimestamp: null
        labels:
          app: mysql-order-generator
          pod-template-hash: 56b677dd
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: DB_HOST
            value: mysql-service
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          image: chrishesshub/data-generator:latest
          imagePullPolicy: Always
          name: order-generator
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-10-03T20:52:49Z"
    generation: 5
    labels:
      app: mysql-order-generator
      pod-template-hash: 5bf64db755
    name: mysql-order-generator-5bf64db755
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql-order-generator
      uid: eba5e8ef-26b7-484d-a197-9bf2ad7b8d90
    resourceVersion: "582506"
    uid: 88c3473b-4f44-4172-9935-d01230587b1c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql-order-generator
        pod-template-hash: 5bf64db755
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mysql-order-generator
          pod-template-hash: 5bf64db755
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: DB_HOST
            value: mysql-service
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          image: chrishesshub/data-generator:latest
          imagePullPolicy: Always
          name: order-generator
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-10-14T20:25:33Z"
    generation: 1
    labels:
      app: mysql-sqlserver-sync
      pod-template-hash: 5bf9b4dc85
    name: mysql-sqlserver-sync-5bf9b4dc85
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql-sqlserver-sync
      uid: f8c6f2e4-0b59-4975-a54c-04c92129c849
    resourceVersion: "843915"
    uid: d6f96b9f-8289-4794-9736-8af813284972
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mysql-sqlserver-sync
        pod-template-hash: 5bf9b4dc85
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-14T20:25:33Z"
        creationTimestamp: null
        labels:
          app: mysql-sqlserver-sync
          pod-template-hash: 5bf9b4dc85
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          - name: SQLSERVER_HOST
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_HOST
                name: sqlserver-secret
          - name: SQLSERVER_DATABASE
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_DATABASE
                name: sqlserver-secret
          - name: SQLSERVER_USER
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_USER
                name: sqlserver-secret
          - name: SQLSERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PASSWORD
                name: sqlserver-secret
          - name: SQLSERVER_PORT
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PORT
                name: sqlserver-secret
          image: chrishesshub/mysql-sqlserver-sync:latest
          imagePullPolicy: Always
          name: sync-service
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-10-03T21:44:55Z"
    generation: 2
    labels:
      app: mysql-sqlserver-sync
      pod-template-hash: 5c4dd8f76f
    name: mysql-sqlserver-sync-5c4dd8f76f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql-sqlserver-sync
      uid: f8c6f2e4-0b59-4975-a54c-04c92129c849
    resourceVersion: "843923"
    uid: 18efaa49-fabe-481a-901f-524c96c80461
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql-sqlserver-sync
        pod-template-hash: 5c4dd8f76f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-03T21:44:55Z"
        creationTimestamp: null
        labels:
          app: mysql-sqlserver-sync
          pod-template-hash: 5c4dd8f76f
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          - name: SQLSERVER_HOST
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_HOST
                name: sqlserver-secret
          - name: SQLSERVER_DATABASE
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_DATABASE
                name: sqlserver-secret
          - name: SQLSERVER_USER
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_USER
                name: sqlserver-secret
          - name: SQLSERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PASSWORD
                name: sqlserver-secret
          - name: SQLSERVER_PORT
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PORT
                name: sqlserver-secret
          image: chrishesshub/mysql-sqlserver-sync:latest
          imagePullPolicy: Always
          name: sync-service
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-10-03T21:23:35Z"
    generation: 2
    labels:
      app: mysql-sqlserver-sync
      pod-template-hash: 75b4556778
    name: mysql-sqlserver-sync-75b4556778
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql-sqlserver-sync
      uid: f8c6f2e4-0b59-4975-a54c-04c92129c849
    resourceVersion: "442157"
    uid: 6a2562b6-0687-4f55-af0b-773e6e1f4c7f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql-sqlserver-sync
        pod-template-hash: 75b4556778
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mysql-sqlserver-sync
          pod-template-hash: 75b4556778
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          - name: SQLSERVER_HOST
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_HOST
                name: sqlserver-secret
          - name: SQLSERVER_DATABASE
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_DATABASE
                name: sqlserver-secret
          - name: SQLSERVER_USER
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_USER
                name: sqlserver-secret
          - name: SQLSERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PASSWORD
                name: sqlserver-secret
          - name: SQLSERVER_PORT
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PORT
                name: sqlserver-secret
          image: chrishesshub/mysql-sqlserver-sync:latest
          imagePullPolicy: Always
          name: sync-service
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-03T21:42:41Z"
    generation: 2
    labels:
      app: mysql-sqlserver-sync
      pod-template-hash: 7cf7fd5d56
    name: mysql-sqlserver-sync-7cf7fd5d56
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: mysql-sqlserver-sync
      uid: f8c6f2e4-0b59-4975-a54c-04c92129c849
    resourceVersion: "442263"
    uid: 7c1fabd4-5236-4526-8b78-eaf3958fd7cf
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: mysql-sqlserver-sync
        pod-template-hash: 7cf7fd5d56
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-03T21:42:41Z"
        creationTimestamp: null
        labels:
          app: mysql-sqlserver-sync
          pod-template-hash: 7cf7fd5d56
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: DB_USER
                name: mysql-data-generator-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DB_PASSWORD
                name: mysql-data-generator-secret
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: DB_NAME
                name: mysql-data-generator-secret
          - name: SQLSERVER_HOST
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_HOST
                name: sqlserver-secret
          - name: SQLSERVER_DATABASE
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_DATABASE
                name: sqlserver-secret
          - name: SQLSERVER_USER
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_USER
                name: sqlserver-secret
          - name: SQLSERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PASSWORD
                name: sqlserver-secret
          - name: SQLSERVER_PORT
            valueFrom:
              secretKeyRef:
                key: SQLSERVER_PORT
                name: sqlserver-secret
          image: chrishesshub/mysql-sqlserver-sync:latest
          imagePullPolicy: Always
          name: sync-service
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: dynatrace-operator
      meta.helm.sh/release-namespace: dynatrace
    creationTimestamp: "2025-10-07T18:12:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
      name: dynatrace-operator
      pod-template-hash: 56886df45
    name: dynatrace-operator-56886df45
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dynatrace-operator
      uid: dea6bf9d-e38b-421f-95a1-99e2d9defc91
    resourceVersion: "842550"
    uid: 22a49a3b-a798-40bc-95c9-6daf818e7f98
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: dynatrace-operator
        pod-template-hash: 56886df45
    template:
      metadata:
        annotations:
          dynatrace.com/inject: "false"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dynatrace-operator
          app.kubernetes.io/version: 1.7.1
          helm.sh/chart: dynatrace-operator-1.7.1
          name: dynatrace-operator
          pod-template-hash: 56886df45
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - operator
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: DT_HOST_AVAILABILITY_DETECTION
            value: "true"
          - name: modules.json
            value: |
              {
                "csiDriver": true,
                "activeGate": true,
                "oneAgent": true,
                "extensions": true,
                "logMonitoring": true,
                "edgeConnect": true,
                "supportability": true,
                "kspm": true
              }
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10080
            name: livez
            protocol: TCP
          - containerPort: 8080
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            exec:
              command:
              - /usr/local/bin/dynatrace-operator
              - startup-probe
            failureThreshold: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: dynatrace-operator
        serviceAccountName: dynatrace-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: arm64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: ppc64le
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: s390x
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: dynatrace-operator
      meta.helm.sh/release-namespace: dynatrace
    creationTimestamp: "2025-10-07T18:12:00Z"
    generation: 1
    labels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: dynatrace-operator
      app.kubernetes.io/version: 1.7.1
      helm.sh/chart: dynatrace-operator-1.7.1
      internal.dynatrace.com/app: webhook
      internal.dynatrace.com/component: webhook
      pod-template-hash: 84bc6c99b
    name: dynatrace-webhook-84bc6c99b
    namespace: dynatrace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: dynatrace-webhook
      uid: feef5fe4-3302-4e40-95a7-c701d7f4bb5a
    resourceVersion: "842707"
    uid: a6fb954f-49d6-4931-8049-14070b641fa8
  spec:
    replicas: 2
    selector:
      matchLabels:
        internal.dynatrace.com/app: webhook
        internal.dynatrace.com/component: webhook
        pod-template-hash: 84bc6c99b
    template:
      metadata:
        annotations:
          dynatrace.com/inject: "false"
          kubectl.kubernetes.io/default-container: webhook
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: webhook
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dynatrace-operator
          app.kubernetes.io/version: 1.7.1
          helm.sh/chart: dynatrace-operator-1.7.1
          internal.dynatrace.com/app: webhook
          internal.dynatrace.com/component: webhook
          pod-template-hash: 84bc6c99b
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - webhook-server
          - --certs-dir=/tmp/k8s-webhook-server/serving-certs/
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: WEBHOOK_PORT
            value: "8443"
          - name: HEALTH_PROBE_BIND_ADDRESS
            value: :10080
          - name: METRICS_BIND_ADDRESS
            value: :8383
          - name: modules.json
            value: |
              {
                "csiDriver": true,
                "activeGate": true,
                "oneAgent": true,
                "extensions": true,
                "logMonitoring": true,
                "edgeConnect": true,
                "supportability": true,
                "kspm": true
              }
          image: public.ecr.aws/dynatrace/dynatrace-operator:v1.7.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: webhook
          ports:
          - containerPort: 8443
            name: server-port
            protocol: TCP
          - containerPort: 10080
            name: livez
            protocol: TCP
          - containerPort: 8383
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 300m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs/
            name: certs-dir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: dynatrace-webhook
        serviceAccountName: dynatrace-webhook
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: arm64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: ppc64le
        - effect: NoSchedule
          key: kubernetes.io/arch
          value: s390x
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              internal.dynatrace.com/app: webhook
              internal.dynatrace.com/component: webhook
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              internal.dynatrace.com/app: webhook
              internal.dynatrace.com/component: webhook
          maxSkew: 1
          nodeTaintsPolicy: Honor
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        volumes:
        - emptyDir:
            sizeLimit: 10Mi
          name: certs-dir
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-23T19:08:54Z"
    generation: 1
    labels:
      app: flask
      pod-template-hash: 64c8955d64
    name: flask-deployment-64c8955d64
    namespace: flask-app
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: flask-deployment
      uid: 51717e5c-0fd2-4577-bc59-87506c8a5648
    resourceVersion: "842508"
    uid: 005eeb3a-1405-4b4b-af7e-36aae8e15d48
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: flask
        pod-template-hash: 64c8955d64
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: flask
          pod-template-hash: 64c8955d64
      spec:
        containers:
        - env:
          - name: APP_ENV
            valueFrom:
              configMapKeyRef:
                key: APP_ENV
                name: flask-config
          - name: DEBUG
            valueFrom:
              configMapKeyRef:
                key: DEBUG
                name: flask-config
          - name: MYSQL_DB
            valueFrom:
              configMapKeyRef:
                key: MYSQL_DB
                name: flask-config
          - name: MYSQL_HOST
            valueFrom:
              configMapKeyRef:
                key: MYSQL_HOST
                name: flask-config
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: db-credentials
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: db-credentials
          image: becloudready/my-flask-app:latest
          imagePullPolicy: Always
          name: flask
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV3W7bOBN9lQ9zLcVW3DaugO+iG2e3RVuvUSe9KYKCpkYW1xSHS46caAO/+2Ik27Hb/LSLXtkiZ4bnnPm7A+XNZwzRkIMclPdxsM4ggZVxBeQwQW+prdExJFAjq0KxgvwOlHPEig25KJ+0+As1R+STYOhEK2aLJ4YGRoJA8ug93TgM6XK9ghxWo3hws86S/703rvj/m6Ig92wIp2qEHDQFLFz8IfPolRafVbPANLaRsYZNAlYt0HakVuOYKu93Jn1c+RscMkaJtn32nAJOpvMnnq1UrCCHhcbT8ej09XicZWcvRmo4Gr9Si5fZsDwtX51hefbi9MVQvzwTIN9RegJ09KgFcsC1kVy+NZEptB9MbRjyYQIRLWqmIEa1Yl19eIrmRkJyUIzLtgtL1hq3vPKFYuxD3F45tVbGqoVFyLNNAtx6QfbpyFbOsfZ253dQQk8KvTkgpcmxMg5DhPzLHaiwlD+QanIlJDBA1oOtSgPJRGkswnUCplZLQRSU0xWGQW1CELN0a7z7zbOT7PRkBFuPWWPtjKzRLeTwrpwSzwLGvgWsWaPDGGeBFh2hUhnbBLysAsaKbAH5KIGK2f+BLPdeseR9UKGyXEECngJDPh6OJSm6wi7Hby8vZyKVcYaNshO0qp2jJldEyF8NE/AYDBX7o0ycG60xxoOXswTY1EgN3xs+VEcCoZdyr+ysQ/VytLfeWgZi0mQhh6uJIHzGJWXtj90uzx90e50dONbIwej4gON1AgFVYf6T5OLZ3iuejbMfVfx7wU9/Qu+AkZqgsSttKx0Y+9KvKUhJZWfDjwY6w78bjP2t9o1cDYd1N2i3pr2ltALqJhhuz8kx3nY0lbV0MwtmbSwu8SJqZbt5DHmpbMQEtPJqYaxh00NRRSFtM724/Prbu+nk6/zi0+d35xfSKUUgL3fKWrje9KL/6Wz7iYh/Nxa3gybn0OAmgTXZpsaP1LhtHdXyd7bV/aAd4aD6XGmWae8J9y/sYj4eY6CbyFQfhOq+02ciXkvxFC7uO3mCpWqsNLGjAucH8/B4pFOEHKxxza3kyAdDnfBWxTjtAfRqpNo2kTGkOhg2WlmQNIW10fhGayEz/bbxmCyG3dL8cgcrFGDnW/9u0cWOQgLkxVLwwcWtkSIRjbAsUTPkMKW5rrBorDDvwwirNJDFk2M+0nmBbOqtcvhLI9dK+D8c8lrYerK0bOdeUnNOTjaK2ZVMN/3nP72VanU7X+FN33zbB953KI+xVRS5q5cEbip0Vy4qNrE0/bqCCU2J90RFgF+OZ/f1jWj/kHsM1A7PG9feqLbTsK/u/bAuzfKj8gLHMNZHRbTbe8lu/u1PhF1vNKUC35LkZ291fyTPfbMqNo+073ag36M59kv3HUteil3Z/eR4qoU315vNZvNvAAAA//8nXRw3kgoAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:31Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 64fd4b4794
    name: coredns-64fd4b4794
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 3d833084-ce18-445d-824b-c17b0948fd7a
    resourceVersion: "842441"
    uid: 1bd9650f-4aed-4e7e-a184-fee9dec8697b
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 64fd4b4794
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 64fd4b4794
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: rancher/mirrored-coredns-coredns:1.12.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            - key: NodeHosts
              path: NodeHosts
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xUUW/iOBD+K6d5TgIcLUKR7gG1Pd1pW4padV8qtBqcCbg4tmUP2UYo/301BFqqLe2utE+J7ZnP38z3jbeAXn+lELWzkAN6H3v1ABJYa1tADpfkjWsqsgwJVMRYICPkW0BrHSNrZ6Ms3eKJFEfiLGiXKWQ2lGnX0wICyclz991SSJf1GnJYD+PRST1I/vqibfHPpCic/RTCYkWQg3EKTRrZBVzSLyVFj0oy15sFpbGJTBW0CRhckPmwtBXGFeQwGA/L4bkanZflQg37o7NRf1ieDcvB+bhfjNVojH8XuCjOBPQNSY+8Sn1wtZbmU4Du/ASf6EkJm0Bd/H9aimyudaUZ8n4CkQwpdkGCKmS1un6pAL0/fWsr4ByQadnsLnDGaLt88AUydWDPDxZr1AYXhiAftAlw44Xj3ZtY2afKm0PekVvMb3DZF6qcZdSWQoT8UZZVhWLJx9Pti4xBfJqmytlSLyGBHrHqdav9J3uKzsI8AbL1Dnkvyuz28tt0cnN1P5tcXEECNZoN/RtcJWRKTaa4o/Llf4Ys4h9qzF6Va9t2noCuxH85BLRqRaH3Pue87mf9bCjztkuYbYyZOaNVAzn8X04dzwLFbvg+807tzKaiG7ex3HWskt89z+M2vGJ1G2mXCe1ciFtX0P2RlcSGwRJT3I1NFArabp5FbR+0C5qbC4MxTjvMzrGpwKQqaNYKjUhDodaKJkoJq+lHtaT72BS7YEiAnaFweGwet7AmadDFHn73QMRbaxoZeC+Rwh2unnXkCG2yBSpLUgw5TN29WlGxMfI4dDA7qsEZyt7WKgYMzqTeoKU/ilxh5J1m70DOD0oebC8S3aAXLX62wN7n7WlJ27b9EQAA//8eX0Hn5AUAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: local-storage
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:31Z"
    generation: 1
    labels:
      app: local-path-provisioner
      pod-template-hash: 774c6665dc
    name: local-path-provisioner-774c6665dc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 436095c6-f6e9-47cc-99e4-d70c20f6256f
    resourceVersion: "842409"
    uid: 5a8c4e38-32e6-43b7-8215-e9ba9fe62c71
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: local-path-provisioner
        pod-template-hash: 774c6665dc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: local-path-provisioner
          pod-template-hash: 774c6665dc
      spec:
        containers:
        - command:
          - local-path-provisioner
          - start
          - --config
          - /etc/config/config.json
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/local-path-provisioner:v0.0.31
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/
            name: config-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: local-path-provisioner-service-account
        serviceAccountName: local-path-provisioner-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xV4W8auRP9V36az7vJLoEkXYkPiPAr1aUpKvROpypCxjuAD6/t88zScBH/+2l2k5RcStOr7gta7PHzm/fGM/eggvkVIxnvoAAVAp1uc0hgY1wJBVxhsH5XoWNIoEJWpWIFxT0o5zwrNt6R/PWLP1AzIZ9E40+0YrZ4YvypERBIju77Lw5jutpuoIDNGR3sbPPkf78YV/YHZendqxBOVQiFUIxGU0oYtxjT8pD+6wAUlBaUTb3AlHbEWME+AasWaJs0N5eUqhBeXPQd9LWiNRSAeYadbg/zM+yeq4tOT78py7LsLt/gonP2Zpl3Ly4uustS7vtmLtCuH6FIAbUQjLg14uXYEPu4uzaVYSiyBAgtavZRgirFen39elJ7AeaoGFe7Btxba9zqUygVYwt098mprTJWLSxCke8T4F0Qfh+fxco6VsE+njsopB8Q96gkB4lr71gZh5Gg+HwPKq7kA9JUY+S0NLF/ylWABNKUUNcR0+Aj9/Os08uaVRHUIqch4hJjxDJVZRmRKJWMqP/OMUan7LtJMrp7+hx74obbIURNmDpfYkqsuKbmpiagpZ9GJG9reTv9vEfNDltKtQlrjCnVhpH6s+vpfDS8Go/kdzqY//ZuNp4PRtN5p3c+fzt8P5+OB2eX3eRr3McfivoHWt65fIzr9M6PoR2NOkAbjgfD8aCTzScfrn/Pz7Let8BeBMFtAqZSK3E3KqfXGE8rE6MXB57bXWyzk8sTccuaLTokmkS/aApqqYytI87WEWntbQnFWQJr5vAWWfaDYnmEp3LwL0igcaRoIkR/0mts6ms8m02mUlbGGTbKXqFVuylq70qC4jxLIGA0vnxayuVp1Voj0cHleQJsKvQ1fw38zrsWNm3ZPlXxpCHYVOfTuUe2IXr22lsoYDacwP42gYiqND+liJzc/bwkLxXp/AtB5CHUUSO1revPGombbx1qKCDPsqoZO5WPOyjgIntv2qYkL9jwbugd412Tj7LWf5lEszUWVzgirWwznaBYKkvYSvTB2d1H7/n/xuJD7yw41rJbuwHdeCe7z9Y+EUYxIsv2CWy9rSt872v34Fcln5MHKdv+8mAWV0G6DuxvxR/pBtODDiydIjpkpGYAERRgjavvROcQjW+Ss4ropkVrybZNRUfDRisrJmHcGo0DrYXHzZHyYm8xPo7qz/ewQRFz+ADTjFcSZWSIBYkUjjC6M2LGPrkHXC5RS3Hc+KleY1lb6XctTEMpeosnz3OSSo7epsEqh/8pcqWI24n7EvL20aM2U6wC766MSL7/ljP7/f7vAAAA//93ZXtQAQkAAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: metrics-server-deployment
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:31Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 7bfffcd44
    name: metrics-server-7bfffcd44
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 9964afd6-38a6-4a28-9f5c-ca2351cb787f
    resourceVersion: "842570"
    uid: 6620e8e2-7aa1-4e92-9490-1ac9adf46e04
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 7bfffcd44
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 7bfffcd44
        name: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
          image: rancher/mirrored-metrics-server:v0.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:52Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-kube-system
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-34.2.1_up34.2.0
      pod-template-hash: c98fdf6fb
    name: traefik-c98fdf6fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 99300ebb-784f-4c6f-8806-850171576a31
    resourceVersion: "842469"
    uid: 6a18f661-5853-4602-a700-4463fffa4cc5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-kube-system
        app.kubernetes.io/name: traefik
        pod-template-hash: c98fdf6fb
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-kube-system
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-34.2.1_up34.2.0
          pod-template-hash: c98fdf6fb
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --global.checknewversion
          - --global.sendanonymoususage
          - --entryPoints.metrics.address=:9100/tcp
          - --entryPoints.traefik.address=:8080/tcp
          - --entryPoints.web.address=:8000/tcp
          - --entryPoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetescrd.allowEmptyServices=true
          - --providers.kubernetesingress
          - --providers.kubernetesingress.allowEmptyServices=true
          - --providers.kubernetesingress.ingressendpoint.publishedservice=kube-system/traefik
          - --entryPoints.websecure.http.tls=true
          - --log.level=INFO
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: rancher/mirrored-library-traefik:3.3.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 8080
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      internal.operator.dynatrace.com/pvc-hash: "2296977532"
      internal.operator.dynatrace.com/template-hash: "2084541873"
    creationTimestamp: "2025-10-07T18:13:06Z"
    generation: 3
    labels:
      app.kubernetes.io/component: activegate
      app.kubernetes.io/created-by: default
      app.kubernetes.io/managed-by: dynatrace-operator
      app.kubernetes.io/name: activegate
      app.kubernetes.io/version: 1.323.29.20251002-173724
    name: default-activegate
    namespace: dynatrace
    ownerReferences:
    - apiVersion: dynatrace.com/v1beta5
      blockOwnerDeletion: true
      controller: true
      kind: DynaKube
      name: default
      uid: e6161946-231a-423a-ad05-d99aadd0542a
    resourceVersion: "842736"
    uid: 867855a9-5bd1-4e59-8967-2b773371d309
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Delete
      whenScaled: Delete
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/created-by: default
        app.kubernetes.io/managed-by: dynatrace-operator
        app.kubernetes.io/name: activegate
    serviceName: ""
    template:
      metadata:
        annotations:
          internal.operator.dynatrace.com/activegate-configuration-hash: "1432012929"
          internal.operator.dynatrace.com/activegate-tenant-token-hash: "3632091728"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: activegate
          app.kubernetes.io/created-by: default
          app.kubernetes.io/managed-by: dynatrace-operator
          app.kubernetes.io/name: activegate
          app.kubernetes.io/version: 1.323.29.20251002-173724
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - env:
          - name: DT_CAPABILITIES
            value: MSGrouter,kubernetes_monitoring,debugging,log_analytics_collector,generic_ingest,otlp_ingest
          - name: DT_DEPLOYMENT_METADATA
            valueFrom:
              configMapKeyRef:
                key: activegate
                name: default-deployment-metadata
                optional: false
          - name: DT_DNS_ENTRY_POINT
            value: https://10.43.236.205:443/communication,https://default-activegate.dynatrace:443/communication
          - name: DT_HTTP_PORT
            value: "9998"
          - name: DT_ID_SEED_K8S_CLUSTER_ID
            value: a86bbfbf-488e-4563-bb3f-d4d136591808
          - name: DT_ID_SEED_NAMESPACE
            value: dynatrace
          - name: DT_SERVER
            valueFrom:
              configMapKeyRef:
                key: communication-endpoints
                name: default-activegate-connection-info
                optional: false
          - name: DT_TENANT
            valueFrom:
              configMapKeyRef:
                key: tenant-uuid
                name: default-activegate-connection-info
                optional: false
          image: bnh29255.live.dynatrace.com/linux/activegate:1.323.29-raw
          imagePullPolicy: Always
          name: activegate
          ports:
          - containerPort: 9999
            name: https
            protocol: TCP
          - containerPort: 9998
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /rest/health
              port: https
              scheme: HTTPS
            initialDelaySeconds: 90
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/tmp/dynatrace/gateway
            name: ag-tmp-gateway
          - mountPath: /var/lib/dynatrace/secrets/tokens/auth-token
            name: ag-authtoken-secret
            readOnly: true
            subPath: auth-token
          - mountPath: /var/lib/dynatrace/gateway/ssl
            name: ag-lib-gateway-ssl
          - mountPath: /var/lib/dynatrace/secrets/tls
            name: server-certs
            readOnly: true
          - mountPath: /var/lib/dynatrace/secrets/tokens/tenant-token
            name: connection-info-secret
            readOnly: true
            subPath: tenant-token
          - mountPath: /var/lib/dynatrace/gateway/temp
            name: ag-lib-gateway-temp
          - mountPath: /var/lib/dynatrace/gateway/data
            name: ag-lib-gateway-data
          - mountPath: /var/log/dynatrace/gateway
            name: ag-log-gateway
          - mountPath: /var/lib/dynatrace/gateway/config
            name: ag-lib-gateway-config
          - mountPath: /opt/dynatrace/gateway/jre/lib/security/cacerts
            name: truststore-volume
            readOnly: true
            subPath: k8s-local.jks
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: default-pull-secret
        initContainers:
        - args:
          - -c
          - /opt/dynatrace/gateway/k8scrt2jks.sh
          command:
          - /bin/bash
          image: bnh29255.live.dynatrace.com/linux/activegate:1.323.29-raw
          imagePullPolicy: Always
          name: certificate-loader
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/dynatrace/gateway/ssl
            name: truststore-volume
          - mountPath: /var/lib/dynatrace/gateway
            name: cert-tmp
          workingDir: /var/lib/dynatrace/gateway
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: dynatrace-kubernetes-monitoring
        serviceAccountName: dynatrace-kubernetes-monitoring
        terminationGracePeriodSeconds: 30
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/created-by: default
              app.kubernetes.io/managed-by: dynatrace-operator
              app.kubernetes.io/name: activegate
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app.kubernetes.io/created-by: default
              app.kubernetes.io/managed-by: dynatrace-operator
              app.kubernetes.io/name: activegate
          maxSkew: 1
          nodeTaintsPolicy: Honor
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        volumes:
        - name: ag-authtoken-secret
          secret:
            defaultMode: 420
            secretName: default-activegate-authtoken-secret
        - emptyDir: {}
          name: ag-lib-gateway-ssl
        - name: server-certs
          secret:
            defaultMode: 420
            secretName: default-activegate-tls-secret
        - name: connection-info-secret
          secret:
            defaultMode: 420
            secretName: default-activegate-tenant-secret
        - emptyDir: {}
          name: ag-lib-gateway-temp
        - emptyDir: {}
          name: ag-lib-gateway-data
        - emptyDir: {}
          name: ag-log-gateway
        - emptyDir: {}
          name: ag-lib-gateway-config
        - emptyDir: {}
          name: truststore-volume
        - emptyDir: {}
          name: cert-tmp
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: ag-tmp-gateway
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: default-activegate-868b57688
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updateRevision: default-activegate-868b57688
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      internal.operator.dynatrace.com/template-hash: "2352585251"
    creationTimestamp: "2025-10-07T18:13:06Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dynatrace-opentelemetry-collector
      app.kubernetes.io/created-by: default
      app.kubernetes.io/managed-by: dynatrace-operator
      app.kubernetes.io/name: dynatrace-opentelemetry-collector
      app.kubernetes.io/version: ""
    name: default-otel-collector
    namespace: dynatrace
    ownerReferences:
    - apiVersion: dynatrace.com/v1beta5
      blockOwnerDeletion: true
      controller: true
      kind: DynaKube
      name: default
      uid: e6161946-231a-423a-ad05-d99aadd0542a
    resourceVersion: "842533"
    uid: 34ab228e-a50b-40f0-bfaa-731ab68d3bc5
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/created-by: default
        app.kubernetes.io/managed-by: dynatrace-operator
        app.kubernetes.io/name: dynatrace-opentelemetry-collector
    serviceName: ""
    template:
      metadata:
        annotations:
          internal.operator.dynatrace.com/telemetry-ingest-config-hash: "1259058935"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: dynatrace-opentelemetry-collector
          app.kubernetes.io/created-by: default
          app.kubernetes.io/managed-by: dynatrace-operator
          app.kubernetes.io/name: dynatrace-opentelemetry-collector
          app.kubernetes.io/version: ""
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --config=file:///config/telemetry.yaml
          env:
          - name: SHARDS
            value: "1"
          - name: POD_NAME_PREFIX
            value: default-otel-collector
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
          - name: SHARD_ID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
          - name: OTLP_GRPC_PORT
            value: "10001"
          - name: OTLP_HTTP_PORT
            value: "10002"
          - name: K8S_CLUSTER_NAME
            value: default
          - name: K8S_CLUSTER_UID
            value: a86bbfbf-488e-4563-bb3f-d4d136591808
          - name: DT_ENTITY_KUBERNETES_CLUSTER
            value: KUBERNETES_CLUSTER-3EFCB4D755CC9CF5
          - name: DT_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: DT_ENDPOINT
                name: dynatrace-otlp-api-endpoint
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: DT_DATA_INGEST_TOKEN
            valueFrom:
              secretKeyRef:
                key: dataIngestToken
                name: default
          image: public.ecr.aws/dynatrace/dynatrace-otel-collector:latest
          imagePullPolicy: Always
          name: collector
          resources: {}
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tls/custom/activegate
            name: agcert
            readOnly: true
          - mountPath: /config
            name: telemetry-collector-config
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: default-pull-secret
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: dynatrace-opentelemetry-collector
        serviceAccountName: dynatrace-opentelemetry-collector
        terminationGracePeriodSeconds: 30
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/created-by: default
              app.kubernetes.io/managed-by: dynatrace-operator
              app.kubernetes.io/name: dynatrace-opentelemetry-collector
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app.kubernetes.io/created-by: default
              app.kubernetes.io/managed-by: dynatrace-operator
              app.kubernetes.io/name: dynatrace-opentelemetry-collector
          maxSkew: 1
          nodeTaintsPolicy: Honor
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        volumes:
        - name: agcert
          secret:
            defaultMode: 420
            items:
            - key: server.crt
              path: cert.pem
            secretName: default-activegate-tls-secret
        - configMap:
            defaultMode: 420
            name: default-telemetry-collector-config
          name: telemetry-collector-config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: default-otel-collector-55f444c9fb
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: default-otel-collector-55f444c9fb
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"mysql"},"name":"mysql-statefulset","namespace":"mysql"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"mysql"}},"serviceName":"mysql-svc","template":{"metadata":{"labels":{"app":"mysql"}},"spec":{"containers":[{"env":[{"name":"MYSQL_ROOT_PASSWORD","value":"rootpassword"},{"name":"MYSQL_DATABASE","value":"flaskdb"},{"name":"MYSQL_USER","value":"flaskuser"},{"name":"MYSQL_PASSWORD","value":"flaskpass"}],"image":"mysql:5.7","name":"mysql","ports":[{"containerPort":3306,"name":"mysql"}],"volumeMounts":[{"mountPath":"/var/lib/mysql","name":"mysql-persistent-storage"},{"mountPath":"/docker-entrypoint-initdb.d","name":"initdb"}]}],"initContainers":[{"command":["sh","-c","rm -rf /var/lib/mysql/*"],"image":"busybox","name":"init-clear-mysql-data","volumeMounts":[{"mountPath":"/var/lib/mysql","name":"mysql-persistent-storage"}]}],"volumes":[{"configMap":{"name":"mysql-initdb"},"name":"initdb"}]}},"volumeClaimTemplates":[{"metadata":{"name":"mysql-persistent-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}},"storageClassName":"local-path"}}]}}
    creationTimestamp: "2025-09-23T19:08:24Z"
    generation: 2
    labels:
      app: mysql
    name: mysql-statefulset
    namespace: mysql
    resourceVersion: "842691"
    uid: ab8276da-9869-462f-a2e3-e09ff0a838cf
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mysql
    serviceName: mysql-svc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-10-08T15:24:42Z"
        creationTimestamp: null
        labels:
          app: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: rootpassword
          - name: MYSQL_DATABASE
            value: flaskdb
          - name: MYSQL_USER
            value: flaskuser
          - name: MYSQL_PASSWORD
            value: flaskpass
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
          - mountPath: /docker-entrypoint-initdb.d
            name: initdb
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - rm -rf /var/lib/mysql/*
          image: busybox
          imagePullPolicy: Always
          name: init-clear-mysql-data
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-storage
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: mysql-initdb
          name: initdb
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: mysql-persistent-storage
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: local-path
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: mysql-statefulset-6df98776fd
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updateRevision: mysql-statefulset-6df98776fd
    updatedReplicas: 1
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xWUW/ivBL9K1eW9ukmIYHSQKR9SGm45S6FCNjqXq0q5JgJ+MOxI9thF1X890920jYs3W5X+t6IM+dkZs6ZMU8Il/QBpKKCowhlWJNd5xAgB+0p36AI/VdkyEEFaLzBGqPoCWHOhcaaCq7Mo8j+AqIVaE9S4RGsNQOPig416B2wwiWCaykYA+mSHZbalbClSkvLgZxfMojvHKS7PewbotarQ+D86wvlm893wIqRIf0tD8cFoAhpiSGn+w+FqxITg9lXGbjqqDQU6OQgIsGmvqIFKI2LEkW8YsxBDGfAbFNMurZW5f2UuT39UB47rHYoQsTPhyHgEHf70NsACYNhPyQh7nWvAtwb5D3o5xj6ucmsqdF2nXKlMWPu64d+VZKDbMkLyEECJ6BQ9O0nX1y0HzkoY4Ls5wZ5CwysllGOmQIHvSr+ctTYqa3XhSKV9Yyf9zaDrOe72bAXule9ELtZN792s142JIPBwA9CQKfHk4NUCcR0O8NkL/J8SguqURT4vu8gDUXJsAbz/h33viOU4Dnd3tUiLO/ibv/68yAMwrjfTa77QRiEN/0bPxkPR8ObwfXV9ag/HvnBKLiN/XF42xtfj5ObuNcNxqN+OP7HbXNqlW+6jSkH2Qgnt+YHagyAHOS6CrSrtKR8ixy0ZSLDzKvVv4UcV0wv6pE8fkaPDgJ+sEyNQLP4PkEOOmBWtfU6OS8RD8liOZnP2keLJJ23n++S6f36djF5SBYtLgVEgm7Hje7ixWptPrlM41H7u+dTeA5ohe20LlXU6Xx6+vL1JlnMklWyXMfp5PSpo4zwpO6l6jR1uL0rr+sF/65K+8O/SPqN4lbx4j/JH2UZf13drdN4uVyPFsltMltN4umyBbNT0gZMZstk9HWRrJdfJul6NV2aPCbj/7+HSafxZLa+W63S96Jm83W6mP+vzeSpA3E8wiqlQXpMEMycwPeuup7v+Z3g2j70moc21zieTE2S6Xw6GbUZJTzb7/ToIFrgrT3FnOxAdvaMliVI15g8Ovje0Bu4WUXZput3+37oD1GDSSvGUsEoOZqW5DOhUwkKeGt9GA7kIAlKVNIuryczG0AqSfVxJLiGH9pOPmPieyrpgTLYQqIIZvh8a+ESZ5RRTS0L2khRmkGKp1Nk1o0EvJlzdlwIoceUQaNypGUFJwcdBKsKuBcV1/UgFuZnirVZIJ2dKOCs7o7XZN7U0X5nW/w7OMFkB5f4+vhDBHbDvcFQn19Q6KJsbe2ivIz4mdG6Qb0Rd34DmAVmND09GrNwsYElMCBaSCODmSjJQYOyt7NCEWKUVz+QlURpLPWLReZ8jCmrpOnLGxaQFY/VTHCjYK2bDSOiKFMpcsrsdaGPpd1gFde0gGZB1hsX5IESiAkx1cxat+3rJVbboHYAFKU+3lJZX0IbWhUoQvdQCHlsXdcXyv8Z7FXwP8S9yvwx4LPk5+I6qJTC/IOBjYG/TOG3p+ftHj0hqqGoz/ZwbP8NeLAko8YADiprh9Tcru/6vu++BLtn0d4RF/V6ebaRjWmgrxfl48kkXVd7j0uTzhmgcd8r4i1fWvU11pXdL6e/AwAA//+PRihwNwsAAA
      objectset.rio.cattle.io/id: helm-controller-chart-registration
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:29Z"
    generation: 1
    labels:
      helmcharts.helm.cattle.io/chart: traefik
      objectset.rio.cattle.io/hash: c0f97ea7a25e3dec71957c7a3241a38f3e5fae5f
    name: helm-install-traefik
    namespace: kube-system
    ownerReferences:
    - apiVersion: helm.cattle.io/v1
      blockOwnerDeletion: false
      controller: false
      kind: HelmChart
      name: traefik
      uid: 0f3d8b30-b937-437a-b2f6-b3b9c888017e
    resourceVersion: "685"
    uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
  spec:
    backoffLimit: 1000
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
    suspend: false
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=8717A52E651717B5B0EF9C9B8646C5FC01C1DA0F7D3F6FEBA321FC57FE9A012A
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
          batch.kubernetes.io/job-name: helm-install-traefik
          controller-uid: 9ebb2449-aad8-4c3a-8951-826f47d7dcd7
          helmcharts.helm.cattle.io/chart: traefik
          job-name: helm-install-traefik
      spec:
        containers:
        - args:
          - install
          - --set-string
          - global.systemDefaultRegistry=
          env:
          - name: NAME
            value: traefik
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-34.2.1+up34.2.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: AUTH_PASS_CREDENTIALS
            value: "false"
          - name: INSECURE_SKIP_TLS_VERIFY
            value: "false"
          - name: PLAIN_HTTP
            value: "false"
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          - name: FAILURE_POLICY
            value: reinstall
          image: rancher/klipper-helm:v0.9.8-build20250709
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/klipper-helm/.helm
            name: klipper-helm
          - mountPath: /home/klipper-helm/.cache
            name: klipper-cache
          - mountPath: /home/klipper-helm/.config
            name: klipper-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: helm-traefik
        serviceAccountName: helm-traefik
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: klipper-helm
        - emptyDir:
            medium: Memory
          name: klipper-cache
        - emptyDir:
            medium: Memory
          name: klipper-config
        - emptyDir:
            medium: Memory
          name: tmp
        - name: values
          projected:
            defaultMode: 420
            sources:
            - secret:
                items:
                - key: HelmChartValuesContent
                  path: values-0-000-HelmChart-ValuesContent.yaml
                name: chart-values-traefik
        - configMap:
            defaultMode: 420
            name: chart-content-traefik
          name: content
  status:
    completionTime: "2025-09-23T12:08:56Z"
    conditions:
    - lastProbeTime: "2025-09-23T12:08:56Z"
      lastTransitionTime: "2025-09-23T12:08:56Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-23T12:08:56Z"
      lastTransitionTime: "2025-09-23T12:08:56Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-23T12:08:31Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/7RW34/aPBb9V1aW+rRJCCHAJFIfMkxY2DIQAa12VY2QcW4Gfzh2ZDu0aMT//skOnYZhOp0+fG/4xzm5957je3lCuKJfQCoqOIrRFmuy6xy6yEF7ynMUo/+KLXJQCRrnWGMUPyHMudBYU8GVWYrtX0C0Au1JKjyCtWbgUdGhBr0DVrpEcC0FYyBdssNSuxIeqdLSciDnlwziGwfpPh72Z6LW0aHr/OsT5fnHCbByZEh/y8NxCShGWmIo6N4lMn8XRFWYGNy+3oKrjkpDiU4OIhJs+GtagtK4rFDMa8YcxPAWmC2MCdnmq7wX0dvdd8eyw2qHYhTeFEUv75Netzvc9oZBQXKC+340jPpFVARDP8CF348CE905V1t9ypXGjLmXH/tVag6yqS+hAAmcgELx1xceuZICOWjLBNkvDPIOGFhd4wIzBQ76qf7z1tlabe1eVae2Hiq6RTAY5JF7g/3cDQnO3WhYFO5gMByGQdGHHuTo9HBykKqAmMpvMdmLopjRkmoUd33fd5CGsmJYgzl/w81viCZ4QR8njRirSRL0Bx/T3q0/CsMguhmPuqNuGCXj23E4uomiwfg2CsJgmKRhNw0HYXQb9cJREkb9KOreDv8RC51aJTBVx5SDPAsoH80PdDYDenAQ8IM9Old+ntynyEEHzOqXQpyc51tf0uVqupi3t5ZptmivJ+nsfnO3nH5Jly0+BUSCbt8bTZLlemM+u8qSUfvbl0/tEtC6ttO6UnGn8+Hp0+fbdDlP1+lqk2TT04eOMoqSpkiq08rF7YVe4HX/XVe98CroV5JbJ8v/pH8UZfJ5PdlkyWq1GS3Tu3S+niazVQtmn0AbMJ2v0tHnZbpZfZpmm/VsZeKYjv//FiabJdP5ZrJeZ2/dmi822XLxvzaTpw7E8QirlQbpMUEwc7q+Fwae7/md7sAueudFm2ucTGcmyGwxm47ajBJ+eOr04CBa4ke7iznZgezsGa0qkK5xb3zwvci7cbc1ZXngB31/6EfojMlqxjLBKDmakhRzoTMJCnirNxgO5CAJStTSdqYnY3ggtaT6OBJcw3dtnzRj4lsm6YEyeIRUEczwZUvCFd5SRjW1LCiXojKvI5nNkOkjEnC+4Oy4FEKPKYOzyrGWNZwcdBCsLuFe1Fw3r6s0PzOsTWfo7EQJF3l3vHPk5zzaZ7bEv4MTTHZwjW+230VgW9crDM3+FYUuq1ZLLqvrGy8ZrRvUK/cu27vpSkbT04MxCxc5rIAB0UIaGcyLkhw0KDuCFYoRo7z+jqwkSmOpny2y4GNMWS1NXV6xgKx5ouaCGwUb3ew1Isoqk6KgzM4BfaxsB6u5piXcQYFrpps2CvJACSSEmGzmrXF6OaEaKzQugLLSxzsqmwmT07pEMbqHUshjayZfqf9nsJ+i/yHup9TvA/6Q/VJgB1VSmL8pkBv480v8+vSjw8fPkOa/XgN0L+fUw8lQNzHd4+oKdPbJJeo1F1mtNNa17QanvwMAAP//+FUlaM4KAAA
      objectset.rio.cattle.io/id: helm-controller-chart-registration
      objectset.rio.cattle.io/owner-gvk: helm.cattle.io/v1, Kind=HelmChart
      objectset.rio.cattle.io/owner-name: traefik-crd
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2025-09-23T12:08:29Z"
    generation: 1
    labels:
      helmcharts.helm.cattle.io/chart: traefik-crd
      objectset.rio.cattle.io/hash: 48ff3d5c3117b372fcdca509795f9f2702af0592
    name: helm-install-traefik-crd
    namespace: kube-system
    ownerReferences:
    - apiVersion: helm.cattle.io/v1
      blockOwnerDeletion: false
      controller: false
      kind: HelmChart
      name: traefik-crd
      uid: f1f266d9-8a0d-4cad-97ff-667742f5e3ed
    resourceVersion: "671"
    uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
  spec:
    backoffLimit: 1000
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
    suspend: false
    template:
      metadata:
        annotations:
          helmcharts.helm.cattle.io/configHash: SHA256=E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
          batch.kubernetes.io/job-name: helm-install-traefik-crd
          controller-uid: 15c921c1-abe8-4305-ac14-2fbedff37abc
          helmcharts.helm.cattle.io/chart: traefik-crd
          job-name: helm-install-traefik-crd
      spec:
        containers:
        - args:
          - install
          env:
          - name: NAME
            value: traefik-crd
          - name: VERSION
          - name: REPO
          - name: HELM_DRIVER
            value: secret
          - name: CHART_NAMESPACE
            value: kube-system
          - name: CHART
            value: https://%{KUBERNETES_API}%/static/charts/traefik-crd-34.2.1+up34.2.0.tgz
          - name: HELM_VERSION
          - name: TARGET_NAMESPACE
            value: kube-system
          - name: AUTH_PASS_CREDENTIALS
            value: "false"
          - name: INSECURE_SKIP_TLS_VERIFY
            value: "false"
          - name: PLAIN_HTTP
            value: "false"
          - name: NO_PROXY
            value: .svc,.cluster.local,10.42.0.0/16,10.43.0.0/16
          - name: FAILURE_POLICY
            value: reinstall
          image: rancher/klipper-helm:v0.9.8-build20250709
          imagePullPolicy: IfNotPresent
          name: helm
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /home/klipper-helm/.helm
            name: klipper-helm
          - mountPath: /home/klipper-helm/.cache
            name: klipper-cache
          - mountPath: /home/klipper-helm/.config
            name: klipper-config
          - mountPath: /tmp
            name: tmp
          - mountPath: /config
            name: values
          - mountPath: /chart
            name: content
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: helm-traefik-crd
        serviceAccountName: helm-traefik-crd
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: klipper-helm
        - emptyDir:
            medium: Memory
          name: klipper-cache
        - emptyDir:
            medium: Memory
          name: klipper-config
        - emptyDir:
            medium: Memory
          name: tmp
        - name: values
          projected:
            defaultMode: 420
            sources:
            - secret:
                name: chart-values-traefik-crd
        - configMap:
            defaultMode: 420
            name: chart-content-traefik-crd
          name: content
  status:
    completionTime: "2025-09-23T12:08:53Z"
    conditions:
    - lastProbeTime: "2025-09-23T12:08:53Z"
      lastTransitionTime: "2025-09-23T12:08:53Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-23T12:08:53Z"
      lastTransitionTime: "2025-09-23T12:08:53Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-23T12:08:31Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
